data$ESTU_VALORMATRICULAUNIVERSIDAD <- ifelse(is.na(data$ESTU_VALORMATRICULAUNIVERSIDAD), "Desconocido", data$ESTU_VALORMATRICULAUNIVERSIDAD)
# valor matricula
## recodificamos para que quede como factor
sum(is.na(data$ESTU_VALORMATRICULAUNIVERSIDAD)) # 2194 na's
data$ESTU_VALORMATRICULAUNIVERSIDAD <- factor(data$ESTU_VALORMATRICULAUNIVERSIDAD, levels = c("Menos de 500 mil","Entre 500 mil y menos de 1 millón", "Entre 1 millón y menos de 2.5 millones", "Entre 2.5 millones y menos de 4 millones","Entre 4 millones y menos de 5.5 millones","Entre 5.5 millones y menos de 7 millones","Más de 7 millones","No pagó matrícula","Desconocido"))
table(data$ESTU_VALORMATRICULAUNIVERSIDAD)
table(data$ESTU_VALORMATRICULAUNIVERSIDAD)
# capacitacion del examen
sum(is.na(data$ESTU_COMOCAPACITOEXAMENSB11)) # 2069 na's
data$ESTU_COMOCAPACITOEXAMENSB11 <- ifelse(is.na(data$ESTU_COMOCAPACITOEXAMENSB11), "Desconocido", data$ESTU_COMOCAPACITOEXAMENSB11)
table(data$ESTU_COMOCAPACITOEXAMENSB11)
data$ESTU_COMOCAPACITOEXAMENSB11 <- as.factor(data$ESTU_COMOCAPACITOEXAMENSB11)
table(data$ESTU_COMOCAPACITOEXAMENSB11)
# semestre que cursa
sum(is.na(data$ESTU_SEMESTRECURSA)) # 2194 na's
data$ESTU_SEMESTRECURSA<-ifelse(data$ESTU_SEMESTRECURSA %in% c("01","02","03","04","05","06"),"06 o menos",data$ESTU_SEMESTRECURSA)
data$ESTU_SEMESTRECURSA <- ifelse(is.na(data$ESTU_SEMESTRECURSA), "Desconocido", data$ESTU_SEMESTRECURSA)
data$ESTU_SEMESTRECURSA <- as.factor(data$ESTU_SEMESTRECURSA)
table(data$ESTU_SEMESTRECURSA)
# educacion papa
sum(is.na(data$FAMI_EDUCACIONPADRE)) # 4738 na's
data$FAMI_EDUCACIONPADRE <- ifelse(is.na(data$FAMI_EDUCACIONPADRE), "Desconocido", data$FAMI_EDUCACIONPADRE)
table(data$FAMI_EDUCACIONPADRE)
data$FAMI_EDUCACIONPADRE <- as.factor(data$FAMI_EDUCACIONPADRE)
table(data$FAMI_EDUCACIONPADRE)
# educacion mama
sum(is.na(data$FAMI_EDUCACIONMADRE)) # 4886 na's
data$FAMI_EDUCACIONMADRE <- ifelse(is.na(data$FAMI_EDUCACIONMADRE), "Desconocido", data$FAMI_EDUCACIONMADRE)
table(data$FAMI_EDUCACIONMADRE)
table(data$FAMI_EDUCACIONMADRE)
str(data$FAMI_EDUCACIONMADRE)
data$FAMI_EDUCACIONMADRE <- as.factor(data$FAMI_EDUCACIONMADRE)
table(data$FAMI_EDUCACIONMADRE)
str(data$FAMI_EDUCACIONMADRE)
table(data$FAMI_EDUCACIONMADRE)
# ocupacion papa
sum(is.na(data$FAMI_OCUPACIONPADRE)) # 2060 na's
data$FAMI_OCUPACIONPADRE <- ifelse(is.na(data$FAMI_OCUPACIONPADRE), "Desconocido", data$FAMI_OCUPACIONPADRE)
data$FAMI_OCUPACIONPADRE <- as.factor(data$FAMI_OCUPACIONPADRE)
table(data$FAMI_OCUPACIONPADRE)
# ocupacion mama
sum(is.na(data$FAMI_OCUPACIONMADRE)) # 2060 na's
data$FAMI_OCUPACIONMADRE <- ifelse(is.na(data$FAMI_OCUPACIONMADRE), "Desconocido", data$FAMI_OCUPACIONMADRE)
data$FAMI_OCUPACIONMADRE <- as.factor(data$FAMI_OCUPACIONMADRE)
table(data$FAMI_OCUPACIONMADRE)
# estrato
sum(is.na(data$FAMI_ESTRATOVIVIENDA)) # 5531 na's
data$FAMI_ESTRATOVIVIENDA <- ifelse(is.na(data$FAMI_ESTRATOVIVIENDA), "Desconocido", data$FAMI_ESTRATOVIVIENDA)
data$FAMI_ESTRATOVIVIENDA <- as.factor(data$FAMI_ESTRATOVIVIENDA)
table(data$FAMI_ESTRATOVIVIENDA)
# internet
sum(is.na(data$FAMI_TIENEINTERNET)) # 5697 na's
data$FAMI_TIENEINTERNET <- ifelse(is.na(data$FAMI_TIENEINTERNET), "Desconocido", data$FAMI_TIENEINTERNET)
# internet
sum(is.na(data$FAMI_TIENEINTERNET)) # 5697 na's
data$FAMI_TIENEINTERNET <- ifelse(is.na(data$FAMI_TIENEINTERNET), "Desconocido", data$FAMI_TIENEINTERNET)
data$FAMI_TIENEINTERNET <- as.factor(data$FAMI_TIENEINTERNET)
table(data$FAMI_TIENEINTERNET)
# computador
sum(is.na(data$FAMI_TIENECOMPUTADOR)) # 6163 na's
data$FAMI_TIENECOMPUTADOR <- ifelse(is.na(data$FAMI_TIENECOMPUTADOR), "Desconocido", data$FAMI_TIENECOMPUTADOR)
data$FAMI_TIENECOMPUTADOR <- as.factor(data$FAMI_TIENECOMPUTADOR)
table(data$FAMI_TIENECOMPUTADOR)
sum(is.na(data$FAMI_TIENELAVADORA)) # 6354 na's
data$FAMI_TIENELAVADORA <- ifelse(is.na(data$FAMI_TIENELAVADORA), "Desconocido", data$FAMI_TIENELAVADORA)
data$FAMI_TIENELAVADORA <- as.factor(data$FAMI_TIENELAVADORA)
table(data$FAMI_TIENELAVADORA)
sum(is.na(data$FAMI_TIENEHORNOMICROOGAS)) # 7019 na's
data$FAMI_TIENEHORNOMICROOGAS <- ifelse(is.na(data$FAMI_TIENEHORNOMICROOGAS), "Desconocido", data$FAMI_TIENEHORNOMICROOGAS)
data$FAMI_TIENEHORNOMICROOGAS <- as.factor(data$FAMI_TIENEHORNOMICROOGAS)
table(data$FAMI_TIENEHORNOMICROOGAS)
sum(is.na(data$FAMI_TIENESERVICIOTV)) # 5801 na's
data$FAMI_TIENESERVICIOTV <- ifelse(is.na(data$FAMI_TIENESERVICIOTV), "Desconocido", data$FAMI_TIENESERVICIOTV)
data$FAMI_TIENESERVICIOTV <- as.factor(data$FAMI_TIENESERVICIOTV)
table(data$FAMI_TIENESERVICIOTV)
sum(is.na(data$FAMI_TIENEAUTOMOVIL)) # 7187 na's
data$FAMI_TIENEAUTOMOVIL <- ifelse(is.na(data$FAMI_TIENEAUTOMOVIL), "Desconocido", data$FAMI_TIENEAUTOMOVIL)
data$FAMI_TIENEAUTOMOVIL <- as.factor(data$FAMI_TIENEAUTOMOVIL)
table(data$FAMI_TIENEAUTOMOVIL)
sum(is.na(data$FAMI_TIENEMOTOCICLETA)) # 7525 na's
data$FAMI_TIENEMOTOCICLETA <- ifelse(is.na(data$FAMI_TIENEMOTOCICLETA), "Desconocido", data$FAMI_TIENEMOTOCICLETA)
data$FAMI_TIENEMOTOCICLETA <- as.factor(data$FAMI_TIENEMOTOCICLETA)
table(data$FAMI_TIENEMOTOCICLETA)
sum(is.na(data$FAMI_TIENECONSOLAVIDEOJUEGOS)) # 7993 na's
data$FAMI_TIENECONSOLAVIDEOJUEGOS <- ifelse(is.na(data$FAMI_TIENECONSOLAVIDEOJUEGOS), "Desconocido", data$FAMI_TIENECONSOLAVIDEOJUEGOS)
data$FAMI_TIENECONSOLAVIDEOJUEGOS <- as.factor(data$FAMI_TIENECONSOLAVIDEOJUEGOS)
table(data$FAMI_TIENECONSOLAVIDEOJUEGOS)
# horas trabaja
sum(is.na(data$ESTU_HORASSEMANATRABAJA)) # 6867 na's
data$ESTU_HORASSEMANATRABAJA <- ifelse(is.na(data$ESTU_HORASSEMANATRABAJA), "Desconocido", data$ESTU_HORASSEMANATRABAJA)
data$ESTU_HORASSEMANATRABAJA <- factor(data$ESTU_HORASSEMANATRABAJA, levels = c("0", "Menos de 10 horas", "Entre 11 y 20 horas", "Entre 21 y 30 horas", "Más de 30 horas", "Desconocido"))
table(data$ESTU_HORASSEMANATRABAJA)
# grupo de referencia
sum(is.na(data$GRUPOREFERENCIA)) # 0 na's
data$GRUPOREFERENCIA<- as.factor(data$GRUPOREFERENCIA)
table(data$GRUPOREFERENCIA)
str(data$GRUPOREFERENCIA) # 22 niveles
# metodo
sum(is.na(data$ESTU_METODO_PRGM)) # 0 na's
data$ESTU_METODO_PRGM<- as.factor(data$ESTU_METODO_PRGM)
table(data$ESTU_METODO_PRGM)
# caracter academico institucion
sum(is.na(data$INST_CARACTER_ACADEMICO)) # 0 na's
data$INST_CARACTER_ACADEMICO<- as.factor(data$INST_CARACTER_ACADEMICO)
table(data$INST_CARACTER_ACADEMICO)
View(data)
View(data)
sum(which(edades<20))
sum(which(edades<19))
which(edades<19)
which(edades<18)
which(edades<15)
which(edades<10)
which(edades<1)
which(edades<0)
data[49485;3]
data[49485;3]
data[49485,3]
data[49485,2]
attributes((data$ESTU_GENERO))
length(cat):1+1
length(cat)
cat<-attributes((data$ESTU_GENERO))
length(cat):1+1
cat<-attributes((data$ESTU_GENERO))$levels
length(cat):1+1
length(cat)
length(cat):1
for(i in c(1,3,6,7,8,)){
cat <- attributes(data[,i])$levels
per <- tabulate(data[,i])/n*100
pl <- plot( data[,i], horiz=TRUE,
#col=gray(seq(1.0,0.9,length=length(cat))),
col=length(cat):1+1,
ylim=c(0,8), xlim=c(0,nrow(data)),
xlab=colnames(data)[i] )
text(0, pl, round(per,1), cex=0.8, font=2, pos=4)
}
for(i in c(1,3,6,7,8)){
cat <- attributes(data[,i])$levels
per <- tabulate(data[,i])/n*100
pl <- plot( data[,i], horiz=TRUE,
#col=gray(seq(1.0,0.9,length=length(cat))),
col=length(cat):1+1,
ylim=c(0,8), xlim=c(0,nrow(data)),
xlab=colnames(data)[i] )
text(0, pl, round(per,1), cex=0.8, font=2, pos=4)
}
for(i in c(1,3,6,7,8)){
cat <- attributes(data[,i])$levels
per <- tabulate(data[,i])/nrow(data)*100
pl <- plot( data[,i], horiz=TRUE,
#col=gray(seq(1.0,0.9,length=length(cat))),
col=length(cat):1+1,
ylim=c(0,8), xlim=c(0,nrow(data)),
xlab=colnames(data)[i] )
text(0, pl, round(per,1), cex=0.8, font=2, pos=4)
}
?plot
set.seed(123)
admi <- data.frame(
V1 = sample(LETTERS[1:5], 100, replace = TRUE),
V2 = sample(letters[1:3], 100, replace = TRUE),
V3 = sample(LETTERS[6:10], 100, replace = TRUE),
V4 = sample(letters[4:6], 100, replace = TRUE),
V5 = sample(LETTERS[11:15], 100, replace = TRUE),
V6 = sample(letters[7:9], 100, replace = TRUE)
)
n <- nrow(admi)
for(i in c(1, 3, 4, 5, 6)) {
cat <- levels(admi[, i])
per <- prop.table(table(admi[, i])) * 100
bp <- barplot(table(admi[, i]), horiz = TRUE,
col = rainbow(length(cat)),
ylim = c(0, 8), xlim = c(0, 40),
xlab = colnames(admi)[i])
text(bp, 0, labels = cat, srt = 0, adj = c(0.5, 0.5), xpd = TRUE, cex = 0.8)
text(0, bp, labels = paste0(round(per, 1), "%"), cex = 0.8, font = 2, pos = 4)
}
for(i in c(1, 3, 4, 5, 6)) {
cat <- levels(admi[, i])
per <- prop.table(table(admi[, i])) * 100
bp <- barplot(table(admi[, i]), horiz = TRUE,
col = rainbow(length(cat)),
ylim = c(0, 8), xlim = c(0, 40),
xlab = colnames(admi)[i])
text(bp, 0, labels = cat, srt = 90, adj = c(0.5, 0.5), xpd = TRUE, cex = 0.8)
text(0, bp, labels = paste0(round(per, 1), "%"), cex = 0.8, font = 2, pos = 4)
}
for(i in c(1, 3, 4, 5, 6)) {
cat <- levels(admi[, i])
per <- prop.table(table(admi[, i])) * 100
bp <- barplot(table(admi[, i]), horiz = TRUE,
col = rainbow(length(cat)),
ylim = c(0, 8), xlim = c(0, 40),
xlab = colnames(admi)[i])
text(bp, 0, labels = cat, srt = 0, adj = c(0.5, 0.5), xpd = TRUE, cex = 0.8)
text(0, bp, labels = paste0(round(per, 1), "%"), cex = 0.8, font = 2, pos = 4)
}
names(cat)
cat
i=1
cat <- attributes(data[,i])$levels
per <- tabulate(data[,i])/nrow(data)*100
plot( data[,i], horiz=TRUE,
#col=gray(seq(1.0,0.9,length=length(cat))),
col=length(cat):1+1,
ylim=c(0,8), xlim=c(0,nrow(data)),
xlab=colnames(data)[i] )
names(cat)
cat
plot( data[,i], horiz=TRUE,
#col=gray(seq(1.0,0.9,length=length(cat))),
col=length(cat):1+1,
ylim=c(0,8), xlim=c(0,nrow(data)),
xlab=colnames(data)[i] ,text(labels=cat))
library(plotly)
fig <- plot_ly(
x = c("giraffes", "orangutans", "monkeys"),
y = c(20, 14, 23),
name = "SF Zoo",
type = "bar"
)
fig
cat <- attributes(data[,i])$levels
set.seed(123)
variable_categorica <- factor(sample(letters[1:5], 100, replace = TRUE))
# Calcular la frecuencia de cada nivel
frecuencias <- table(variable_categorica)
# Crear el gráfico interactivo con plot_ly
plot_ly(x = names(frecuencias), y = frecuencias, type = "bar") %>%
layout(title = "Gráfico de Barras",
xaxis = list(title = "Niveles"),
yaxis = list(title = "Frecuencia"),
showlegend = FALSE)
plot_ly(x = names(frecuencias), y = frecuencias, type = "bar") %>%
layout(title = "Gráfico de Barras",
xaxis = list(title = "Niveles"),
yaxis = list(title = "Frecuencia"),
showlegend = TRUE)
frecuencias <- table(data[,i])
# Crear el gráfico interactivo con plot_ly
plot_ly(x = names(frecuencias), y = frecuencias, type = "bar") %>%
layout(title = "Gráfico de Barras",
xaxis = list(title = "Niveles"),
yaxis = list(title = "Frecuencia"),
showlegend = FALSE)
plot_ly(x = names(frecuencias), y = frecuencias, type = "bar") %>%
layout(title = "Gráfico de Barras",
xaxis = colnames(data)[i],
yaxis = list(title = "Frecuencia"),
showlegend = FALSE)
# Crear el gráfico interactivo con plot_ly
plot_ly(x = names(frecuencias), y = frecuencias, type = "bar") %>%
layout(title = "Gráfico de Barras",
yaxis = list(title = "Frecuencia"),
showlegend = FALSE)
# Crear el gráfico interactivo con plot_ly
plot_ly(x = names(frecuencias), y = frecuencias, type = "bar")
# Crear el gráfico interactivo con plot_ly
plot_ly(x = names(frecuencias), y = frecuencias, type = "bar") %>%
layout(title = "Gráfico de Barras",
xaxis = list(title = colnames(data)[i] ),
yaxis = list(title = "Frecuencia"),
showlegend = FALSE)
# Crear el gráfico interactivo con plot_ly
plot_ly(x = names(frecuencias), y = frecuencias, type = "bar", orientation="h") %>%
layout(title = "Gráfico de Barras",
xaxis = list(title = colnames(data)[i] ),
yaxis = list(title = "Frecuencia"),
showlegend = FALSE)
# Crear el gráfico interactivo con plot_ly
plot_ly(x = names(frecuencias), y = frecuencias, type = "bar", orientation="h") %>%
layout(title = "Gráfico de Barras",
yaxis = list(title = colnames(data)[i] ),
xaxis = list(title = "Frecuencia"),
showlegend = FALSE)
# Crear el gráfico interactivo con plot_ly
plot_ly(x = frecuencias, y = names(frecuencias), type = "bar", orientation="h") %>%
layout(title = "Gráfico de Barras",
yaxis = list(title = colnames(data)[i] ),
xaxis = list(title = "Frecuencia"),
showlegend = FALSE)
# Crear el gráfico interactivo con plot_ly
plot_ly(x = frecuencias, y = names(frecuencias), type = "bar", orientation="h", marker = list(color = length(cat):1+1)) %>%
layout(title = "Gráfico de Barras",
yaxis = list(title = colnames(data)[i] ),
xaxis = list(title = "Frecuencia"),
showlegend = FALSE)
# Crear el gráfico interactivo con plot_ly
plot_ly(x = frecuencias, y = names(frecuencias), type = "bar", orientation="h", marker = list(color = length(cat):1)) %>%
layout(title = "Gráfico de Barras",
yaxis = list(title = colnames(data)[i] ),
xaxis = list(title = "Frecuencia"),
showlegend = FALSE)
# Crear el gráfico interactivo con plot_ly
plot_ly(x = frecuencias, y = names(frecuencias), type = "bar", orientation="h", marker = list(color = length(cat):1+2)) %>%
layout(title = "Gráfico de Barras",
yaxis = list(title = colnames(data)[i] ),
xaxis = list(title = "Frecuencia"),
showlegend = FALSE)
# Crear el gráfico interactivo con plot_ly
plot_ly(x = frecuencias, y = names(frecuencias), type = "bar", orientation="h", marker = list(color = length(cat):1)) %>%
layout(title = "Gráfico de Barras",
yaxis = list(title = colnames(data)[i] ),
xaxis = list(title = "Frecuencia"),
showlegend = FALSE)
per <- tabulate(data[,i])/nrow(data)*100
for(i in c(1,3,6,7,8)){
cat <- attributes(data[,i])$levels
per <- tabulate(data[,i])/nrow(data)*100
pl <- plot( data[,i], horiz=TRUE,
#col=gray(seq(1.0,0.9,length=length(cat))),
col=length(cat):1+1,
ylim=c(0,8), xlim=c(0,nrow(data)),
xlab=colnames(data)[i])
text(0, pl, round(per,1), cex=0.8, font=2, pos=4)
}
tabulate(data[,i])
data[,i]
table(data[,i])/nrow(data)*100
per <- table(data[,i])/nrow(data)*100
plot_ly(x = frecuencias, y = names(frecuencias), type = "bar", orientation="h", marker = list(color = length(cat):1), text=per) %>%
layout(title = "Gráfico de Barras",
yaxis = list(title = colnames(data)[i] ),
xaxis = list(title = "Frecuencia"),
showlegend = FALSE)
per <- round(table(data[,i])/nrow(data)*100,3)
plot_ly(x = frecuencias, y = names(frecuencias), type = "bar", orientation="h", marker = list(color = length(cat):1), text=per) %>%
layout(title = "Gráfico de Barras",
yaxis = list(title = colnames(data)[i] ),
xaxis = list(title = "Frecuencia"),
showlegend = FALSE)
for(i in c(1,3,6,7,8)){
frecuencias <- table(data[,i])
per <- round(table(data[,i])/nrow(data)*100,3)
plot_ly(x = frecuencias, y = names(frecuencias), type = "bar", orientation="h", marker = list(color = length(cat):1), text=per) %>%
layout(title = "Gráfico de Barras",
yaxis = list(title = colnames(data)[i] ),
xaxis = list(title = "Frecuencia"),
showlegend = FALSE)
}
for(i in c(1,3,6,7,8)){
frecuencias <- table(data[,i])
per <- round(table(data[,i])/nrow(data)*100,3)
plot_ly(x = frecuencias, y = names(frecuencias), type = "bar", orientation="h", marker = list(color = length(cat):1), text=per) %>%
layout(title = "Gráfico de Barras",
yaxis = list(title = colnames(data)[i] ),
xaxis = list(title = "Frecuencia"),
showlegend = FALSE)
}
i=!
1
i=1
for(i in c(1,3,6,7,8)){
frecuencias <- table(data[,i])
per <- round(table(data[,i])/nrow(data)*100,3)
pl<-plot_ly(x = frecuencias, y = names(frecuencias), type = "bar", orientation="h", marker = list(color = length(cat):1), text=per) %>%
layout(title = "Gráfico de Barras",
yaxis = list(title = colnames(data)[i] ),
xaxis = list(title = "Frecuencia"),
showlegend = FALSE)
pl
}
pl
par(las=1, mfrow=c(2,3), mai=c(0.6,0.5,0.2,0.1))
for(i in c(1,3,6,7,8)){
frecuencias <- table(data[,i])
per <- round(table(data[,i])/nrow(data)*100,3)
pl<-plot_ly(x = frecuencias, y = names(frecuencias), type = "bar", orientation="h", marker = list(color = length(cat):1), text=per) %>%
layout(title = "Gráfico de Barras",
yaxis = list(title = colnames(data)[i] ),
xaxis = list(title = "Frecuencia"),
showlegend = FALSE)
pl
}
i=1
frecuencias <- table(data[,i])
per <- round(table(data[,i])/nrow(data)*100,3)
pl<-plot_ly(x = frecuencias, y = names(frecuencias), type = "bar", orientation="h", marker = list(color = length(cat):1), text=per) %>%
layout(title = "Gráfico de Barras",
yaxis = list(title = colnames(data)[i] ),
xaxis = list(title = "Frecuencia"),
showlegend = FALSE)
pl
par(las=1, mfrow=c(2,3), mai=c(0.6,0.5,0.2,0.1))
for(i in c(1,3,6,7,8)){
frecuencias <- table(data[,i])
per <- round(table(data[,i])/nrow(data)*100,3)
pl<-plot_ly(x = frecuencias, y = names(frecuencias), type = "bar", orientation="h", marker = list(color = length(cat):1), text=per) %>%
layout(title = "Gráfico de Barras",
yaxis = list(title = colnames(data)[i] ),
xaxis = list(title = "Frecuencia"),
showlegend = FALSE)
pl
}
par(las=1, mfrow=c(2,3), mai=c(0.6,0.5,0.2,0.1))
frecuencias <- table(data[,i])
per <- round(table(data[,i])/nrow(data)*100,3)
pl<-plot_ly(x = frecuencias, y = names(frecuencias), type = "bar", orientation="h", marker = list(color = length(cat):1), text=per) %>%
layout(title = "Gráfico de Barras",
yaxis = list(title = colnames(data)[i] ),
xaxis = list(title = "Frecuencia"),
showlegend = FALSE)
pl
#par(las=1, mfrow=c(2,3), mai=c(0.6,0.5,0.2,0.1))
figs=c()
for(i in c(1,3,6,7,8)){
frecuencias <- table(data[,i])
per <- round(table(data[,i])/nrow(data)*100,3)
figs[i]<-plot_ly(x = frecuencias, y = names(frecuencias), type = "bar", orientation="h", marker = list(color = length(cat):1), text=per) %>%
layout(title = "Gráfico de Barras",
yaxis = list(title = colnames(data)[i] ),
xaxis = list(title = "Frecuencia"),
showlegend = FALSE)
}
#par(las=1, mfrow=c(2,3), mai=c(0.6,0.5,0.2,0.1))
figs=NULL
for(i in c(1,3,6,7,8)){
frecuencias <- table(data[,i])
per <- round(table(data[,i])/nrow(data)*100,3)
figs[i]<-plot_ly(x = frecuencias, y = names(frecuencias), type = "bar", orientation="h", marker = list(color = length(cat):1), text=per) %>%
layout(title = "Gráfico de Barras",
yaxis = list(title = colnames(data)[i] ),
xaxis = list(title = "Frecuencia"),
showlegend = FALSE)
}
figs
figs[i]
figs[1]
#par(las=1, mfrow=c(2,3), mai=c(0.6,0.5,0.2,0.1))
figs=NULL
frecuencias <- table(data[,i])
class(pl)
append(figs,pl)
figs<-append(figs,pl)
figs[1]
figs[1][1]
plot(figs[1])
#par(las=1, mfrow=c(2,3), mai=c(0.6,0.5,0.2,0.1))
figs=list()
figs<-append(figs,pl)
plot(figs[1])
plot(figs)
subplot(figs)
subplot(figs[[1]])
i=1
pl1<-plot_ly(x = frecuencias, y = names(frecuencias), type = "bar", orientation="h", marker = list(color = length(cat):1), text=per) %>%
layout(title = "Gráfico de Barras",
yaxis = list(title = colnames(data)[i] ),
xaxis = list(title = "Frecuencia"),
showlegend = FALSE)
pl2<-plot_ly(x = frecuencias, y = names(frecuencias), type = "bar", orientation="h", marker = list(color = length(cat):1), text=per) %>%
layout(title = "Gráfico de Barras",
yaxis = list(title = colnames(data)[i+1] ),
xaxis = list(title = "Frecuencia"),
showlegend = FALSE)
subplot(pl1,pl2)
#par(las=1, mfrow=c(2,3), mai=c(0.6,0.5,0.2,0.1))
figs=list()
for(i in c(1,3,6,7,8)){
cat <- attributes(data[,i])$levels
frecuencias <- table(data[,i])
per <- round(table(data[,i])/nrow(data)*100,3)
figs[[i]]<-plot_ly(x = frecuencias, y = names(frecuencias), type = "bar",
orientation="h", marker = list(color = length(cat):1),
text=per) %>%
layout(title = "Gráfico de Barras",
yaxis = list(title = colnames(data)[i] ),
xaxis = list(title = "Frecuencia"),
showlegend = FALSE)
}
subplot(figs)
i=!
1
i=1
cat <- attributes(data[,i])$levels
frecuencias <- table(data[,i])
plot_ly(x = frecuencias, y = names(frecuencias), type = "bar",
orientation="h", marker = list(color = length(cat):1),
text=per) %>%
layout(title = "Gráfico de Barras",
yaxis = list(title = colnames(data)[i] ),
xaxis = list(title = "Frecuencia"),
showlegend = FALSE)
i=3
cat <- attributes(data[,i])$levels
frecuencias <- table(data[,i])
per <- round(table(data[,i])/nrow(data)*100,3)
plot_ly(x = frecuencias, y = names(frecuencias), type = "bar",
orientation="h", marker = list(color = length(cat):1),
text=per) %>%
layout(title = "Gráfico de Barras",
yaxis = list(title = colnames(data)[i] ),
xaxis = list(title = "Frecuencia"),
showlegend = FALSE)
subplot(figs,nrows = 2, shareX = TRUE)
#par(las=1, mfrow=c(2,3), mai=c(0.6,0.5,0.2,0.1))
figs=list()
for(i in c(1,3,6,7,8)){
cat <- attributes(data[,i])$levels
frecuencias <- table(data[,i])
per <- round(table(data[,i])/nrow(data)*100,3)
figs[[i]]<-plot_ly(x = frecuencias, y = names(frecuencias), type = "bar",
orientation="h", marker = list(color = length(cat):1),
text=per) %>%
layout(title = "Gráfico de Barras",
yaxis = list(title = colnames(data)[i] ),
xaxis = list(title = "Frecuencia"),
showlegend = FALSE)
}
subplot(figs,nrows = 2, shareX = TRUE)
