table(data$ESTU_GENERO)
# edad
library(stringr)
edad <- str_sub(data$ESTU_FECHANACIMIENTO,7,10)
edad<-as.numeric(edad)
edades<-2023-edad
# etnia
sum(is.na(data$ESTU_TIENEETNIA)) # 775 na's
data$ESTU_TIENEETNIA <- ifelse(is.na(data$ESTU_TIENEETNIA), "Desconocido", data$ESTU_TIENEETNIA)
data$ESTU_TIENEETNIA <- as.factor(data$ESTU_TIENEETNIA)
table(data$ESTU_TIENEETNIA)
# depto
data$ESTU_DEPTO_RESIDE<-ifelse(data$ESTU_DEPTO_RESIDE %in% c("BARCELONA","BUENOS AIRES","FRANKFURT","HOUSTON","LIMA","MIAMI","NUEVA YORK","PARIS","QUEBEC","ROMA","SACRAMENTO","SANTIAGO DE CHILE","SAO PAULO","SEUL","TRENTON"),"EXTRANJERO",data$ESTU_DEPTO_RESIDE)
sum(is.na(data$ESTU_DEPTO_RESIDE))
length(unique(data$ESTU_DEPTO_RESIDE)) # hay 35 pq son mas los extranjeros y NAs
data$ESTU_DEPTO_RESIDE <- ifelse(is.na(data$ESTU_DEPTO_RESIDE), "Desconocido", data$ESTU_DEPTO_RESIDE)
data$ESTU_DEPTO_RESIDE <- as.factor(data$ESTU_DEPTO_RESIDE)
table(data$ESTU_DEPTO_RESIDE)
# estado civil
sum(is.na(data$ESTU_ESTADOCIVIL)) # 580 na's
data$ESTU_ESTADOCIVIL <- ifelse(is.na(data$ESTU_ESTADOCIVIL), "Desconocido", data$ESTU_ESTADOCIVIL)
data$ESTU_ESTADOCIVIL <- as.factor(data$ESTU_ESTADOCIVIL)
table(data$ESTU_ESTADOCIVIL)
# valor matricula
## recodificamos para que quede como factor
sum(is.na(data$ESTU_VALORMATRICULAUNIVERSIDAD)) # 2194 na's
data$ESTU_VALORMATRICULAUNIVERSIDAD <- ifelse(is.na(data$ESTU_VALORMATRICULAUNIVERSIDAD), "Desconocido", data$ESTU_VALORMATRICULAUNIVERSIDAD)
data$ESTU_VALORMATRICULAUNIVERSIDAD <- factor(data$ESTU_VALORMATRICULAUNIVERSIDAD, levels = c("Menos de 500 mil","Entre 500 mil y menos de 1 millón", "Entre 1 millón y menos de 2.5 millones", "Entre 2.5 millones y menos de 4 millones","Entre 4 millones y menos de 5.5 millones","Entre 5.5 millones y menos de 7 millones","Más de 7 millones","No pagó matrícula","Desconocido"))
table(data$ESTU_VALORMATRICULAUNIVERSIDAD)
# capacitacion del examen
sum(is.na(data$ESTU_COMOCAPACITOEXAMENSB11)) # 2069 na's
data$ESTU_COMOCAPACITOEXAMENSB11 <- ifelse(is.na(data$ESTU_COMOCAPACITOEXAMENSB11), "Desconocido", data$ESTU_COMOCAPACITOEXAMENSB11)
data$ESTU_COMOCAPACITOEXAMENSB11 <- as.factor(data$ESTU_COMOCAPACITOEXAMENSB11)
table(data$ESTU_COMOCAPACITOEXAMENSB11)
# semestre que cursa
sum(is.na(data$ESTU_SEMESTRECURSA)) # 2194 na's
data$ESTU_SEMESTRECURSA<-ifelse(data$ESTU_SEMESTRECURSA %in% c("01","02","03","04","05","06"),"06 o menos",data$ESTU_SEMESTRECURSA)
data$ESTU_SEMESTRECURSA <- ifelse(is.na(data$ESTU_SEMESTRECURSA), "Desconocido", data$ESTU_SEMESTRECURSA)
data$ESTU_SEMESTRECURSA <- as.factor(data$ESTU_SEMESTRECURSA)
table(data$ESTU_SEMESTRECURSA)
# educacion papa
sum(is.na(data$FAMI_EDUCACIONPADRE)) # 4738 na's
data$FAMI_EDUCACIONPADRE <- ifelse(is.na(data$FAMI_EDUCACIONPADRE), "Desconocido", data$FAMI_EDUCACIONPADRE)
data$FAMI_EDUCACIONPADRE <- as.factor(data$FAMI_EDUCACIONPADRE)
table(data$FAMI_EDUCACIONPADRE)
# educacion mama
sum(is.na(data$FAMI_EDUCACIONMADRE)) # 4886 na's
data$FAMI_EDUCACIONMADRE <- ifelse(is.na(data$FAMI_EDUCACIONMADRE), "Desconocido", data$FAMI_EDUCACIONMADRE)
data$FAMI_EDUCACIONMADRE <- as.factor(data$FAMI_EDUCACIONMADRE)
table(data$FAMI_EDUCACIONMADRE)
# ocupacion papa
sum(is.na(data$FAMI_OCUPACIONPADRE)) # 2060 na's
data$FAMI_OCUPACIONPADRE <- ifelse(is.na(data$FAMI_OCUPACIONPADRE), "Desconocido", data$FAMI_OCUPACIONPADRE)
data$FAMI_OCUPACIONPADRE <- as.factor(data$FAMI_OCUPACIONPADRE)
table(data$FAMI_OCUPACIONPADRE)
# ocupacion mama
sum(is.na(data$FAMI_OCUPACIONMADRE)) # 2060 na's
data$FAMI_OCUPACIONMADRE <- ifelse(is.na(data$FAMI_OCUPACIONMADRE), "Desconocido", data$FAMI_OCUPACIONMADRE)
data$FAMI_OCUPACIONMADRE <- as.factor(data$FAMI_OCUPACIONMADRE)
table(data$FAMI_OCUPACIONMADRE)
# estrato
sum(is.na(data$FAMI_ESTRATOVIVIENDA)) # 5531 na's
data$FAMI_ESTRATOVIVIENDA <- ifelse(is.na(data$FAMI_ESTRATOVIVIENDA), "Desconocido", data$FAMI_ESTRATOVIVIENDA)
data$FAMI_ESTRATOVIVIENDA <- as.factor(data$FAMI_ESTRATOVIVIENDA)
table(data$FAMI_ESTRATOVIVIENDA)
# internet
sum(is.na(data$FAMI_TIENEINTERNET)) # 5697 na's
data$FAMI_TIENEINTERNET <- ifelse(is.na(data$FAMI_TIENEINTERNET), "Desconocido", data$FAMI_TIENEINTERNET)
data$FAMI_TIENEINTERNET <- as.factor(data$FAMI_TIENEINTERNET)
table(data$FAMI_TIENEINTERNET)
# computador
sum(is.na(data$FAMI_TIENECOMPUTADOR)) # 6163 na's
data$FAMI_TIENECOMPUTADOR <- ifelse(is.na(data$FAMI_TIENECOMPUTADOR), "Desconocido", data$FAMI_TIENECOMPUTADOR)
data$FAMI_TIENECOMPUTADOR <- as.factor(data$FAMI_TIENECOMPUTADOR)
table(data$FAMI_TIENECOMPUTADOR)
# lavadora
sum(is.na(data$FAMI_TIENELAVADORA)) # 6354 na's
data$FAMI_TIENELAVADORA <- ifelse(is.na(data$FAMI_TIENELAVADORA), "Desconocido", data$FAMI_TIENELAVADORA)
data$FAMI_TIENELAVADORA <- as.factor(data$FAMI_TIENELAVADORA)
table(data$FAMI_TIENELAVADORA)
# microogas
sum(is.na(data$FAMI_TIENEHORNOMICROOGAS)) # 7019 na's
data$FAMI_TIENEHORNOMICROOGAS <- ifelse(is.na(data$FAMI_TIENEHORNOMICROOGAS), "Desconocido", data$FAMI_TIENEHORNOMICROOGAS)
data$FAMI_TIENEHORNOMICROOGAS <- as.factor(data$FAMI_TIENEHORNOMICROOGAS)
table(data$FAMI_TIENEHORNOMICROOGAS)
# tv
sum(is.na(data$FAMI_TIENESERVICIOTV)) # 5801 na's
data$FAMI_TIENESERVICIOTV <- ifelse(is.na(data$FAMI_TIENESERVICIOTV), "Desconocido", data$FAMI_TIENESERVICIOTV)
data$FAMI_TIENESERVICIOTV <- as.factor(data$FAMI_TIENESERVICIOTV)
table(data$FAMI_TIENESERVICIOTV)
# auto
sum(is.na(data$FAMI_TIENEAUTOMOVIL)) # 7187 na's
data$FAMI_TIENEAUTOMOVIL <- ifelse(is.na(data$FAMI_TIENEAUTOMOVIL), "Desconocido", data$FAMI_TIENEAUTOMOVIL)
data$FAMI_TIENEAUTOMOVIL <- as.factor(data$FAMI_TIENEAUTOMOVIL)
table(data$FAMI_TIENEAUTOMOVIL)
# moto
sum(is.na(data$FAMI_TIENEMOTOCICLETA)) # 7525 na's
data$FAMI_TIENEMOTOCICLETA <- ifelse(is.na(data$FAMI_TIENEMOTOCICLETA), "Desconocido", data$FAMI_TIENEMOTOCICLETA)
data$FAMI_TIENEMOTOCICLETA <- as.factor(data$FAMI_TIENEMOTOCICLETA)
table(data$FAMI_TIENEMOTOCICLETA)
# consola
sum(is.na(data$FAMI_TIENECONSOLAVIDEOJUEGOS)) # 7993 na's
data$FAMI_TIENECONSOLAVIDEOJUEGOS <- ifelse(is.na(data$FAMI_TIENECONSOLAVIDEOJUEGOS), "Desconocido", data$FAMI_TIENECONSOLAVIDEOJUEGOS)
data$FAMI_TIENECONSOLAVIDEOJUEGOS <- as.factor(data$FAMI_TIENECONSOLAVIDEOJUEGOS)
table(data$FAMI_TIENECONSOLAVIDEOJUEGOS)
# horas trabaja
sum(is.na(data$ESTU_HORASSEMANATRABAJA)) # 6867 na's
data$ESTU_HORASSEMANATRABAJA <- ifelse(is.na(data$ESTU_HORASSEMANATRABAJA), "Desconocido", data$ESTU_HORASSEMANATRABAJA)
data$ESTU_HORASSEMANATRABAJA <- factor(data$ESTU_HORASSEMANATRABAJA, levels = c("0", "Menos de 10 horas", "Entre 11 y 20 horas", "Entre 21 y 30 horas", "Más de 30 horas", "Desconocido"))
table(data$ESTU_HORASSEMANATRABAJA)
# grupo de referencia
sum(is.na(data$GRUPOREFERENCIA)) # 0 na's
data$GRUPOREFERENCIA<- as.factor(data$GRUPOREFERENCIA)
table(data$GRUPOREFERENCIA)
str(data$GRUPOREFERENCIA) # 22 niveles
# metodo
sum(is.na(data$ESTU_METODO_PRGM)) # 0 na's
data$ESTU_METODO_PRGM <- ifelse(data$ESTU_METODO_PRGM == "DISTANCIA VITUAL", "DISTANCIA VIRTUAL", data$ESTU_METODO_PRGM)
data$ESTU_METODO_PRGM<- as.factor(data$ESTU_METODO_PRGM)
table(data$ESTU_METODO_PRGM)
# caracter academico institucion
sum(is.na(data$INST_CARACTER_ACADEMICO)) # 0 na's
data$INST_CARACTER_ACADEMICO<- as.factor(data$INST_CARACTER_ACADEMICO)
table(data$INST_CARACTER_ACADEMICO)
#| warning: false
#| message: false
library(plotly)
#| eval: false
#| echo: false
#| warning: false
#| message: false
# Sexo
i=1
#cat <- attributes(data[,i])$levels
frecuencias <- table(data[,i])
per <- round(table(data[,i])/nrow(data)*100,3)
plot_ly(x = frecuencias, y = names(frecuencias), type = "bar",
orientation="h", color=names(frecuencias),
text=per, textfont = list(color = "black")) %>%
layout(yaxis = list(title = colnames(data)[i] ),
xaxis = list(title = "Frecuencia"),
showlegend = FALSE)
#| warning: false
#| message: false
#| echo: false
# Sexo
i=1
#cat <- attributes(data[,i])$levels
frecuencias <- table(data[,i])
per <- round(table(data[,i])/nrow(data)*100,3)
plot_ly(data, labels = ~names(frecuencias), values = ~frecuencias, type = 'pie', textfont = list(color = "black"))
#| eval: false
#| echo: false
#| warning: false
#| message: false
# Etnia
i=3
#cat <- attributes(data[,i])$levels
frecuencias <- table(data[,i])
per <- round(table(data[,i])/nrow(data)*100,3)
plot_ly(x = frecuencias, y = names(frecuencias), type = "bar",
orientation="h", color=names(frecuencias),
text=per, textfont = list(color = "black")) %>%
layout(
yaxis = list(title = colnames(data)[i] ),
xaxis = list(title = "Frecuencia"),
showlegend = FALSE)
#| warning: false
#| message: false
#| echo: false
# Etnia
i=3
#cat <- attributes(data[,i])$levels
frecuencias <- table(data[,i])
per <- round(table(data[,i])/nrow(data)*100,3)
plot_ly(data, labels = ~names(frecuencias), values = ~frecuencias, type = 'pie', textfont = list(color = "black"))
#| eval: false
#| echo: false
#| warning: false
#| message: false
# Estado civil
i=6
#cat <- attributes(data[,i])$levels
frecuencias <- table(data[,i])
per <- round(table(data[,i])/nrow(data)*100,3)
plot_ly(x = frecuencias, y = names(frecuencias), type = "bar",
orientation="h", color=names(frecuencias),
text=per, textfont = list(color = "black")) %>%
layout(
yaxis = list(title = colnames(data)[i] ),
xaxis = list(title = "Frecuencia"),
showlegend = FALSE)
#| warning: false
#| message: false
#| echo: false
# Estado civil
i=6
#cat <- attributes(data[,i])$levels
frecuencias <- table(data[,i])
per <- round(table(data[,i])/nrow(data)*100,3)
plot_ly(data, labels = ~names(frecuencias), values = ~frecuencias, type = 'pie', textfont = list(color = "black"))
#| echo: false
# Módulo razonamiento cuantitativo
i=31
puntajes <- unlist(data[,i])
hist <- histpuntajes(puntajes)
boxplot <- plot_ly(x = ~puntajes, type = "box", boxpoints = "outliers", name = " ") %>%
layout(showlegend = FALSE)
subplot(hist[[1]], boxplot[[1]], nrows = 2, shareX = T) %>%
layout(xaxis = list(title = "Puntaje"),
yaxis = list(title = "Frecuencia"))
#| echo: false
histpuntajes <- function(puntajes) {
h <- hist(puntajes, plot = FALSE)
plot_ly(x = ~puntajes, type = "histogram", name = "Puntaje", nbinsx = 2*length(h$counts), marker = list(color="lightblue1",line = list(color = "white", width = 1))) %>%
layout(yaxis = list(title = "Frecuencia"))
}
#| echo: false
# Módulo razonamiento cuantitativo
i=29
puntajes <- unlist(data[,i])
hist <- histpuntajes(puntajes)
boxplot <- plot_ly(x = ~puntajes, type = "box", boxpoints = "outliers", name = " ") %>%
layout(showlegend = FALSE)
subplot(hist[[1]], boxplot[[1]], nrows = 2, shareX = T) %>%
layout(xaxis = list(title = "Puntaje"),
yaxis = list(title = "Frecuencia"))
#| echo: false
# Módulo razonamiento cuantitativo
i=30
puntajes <- unlist(data[,i])
hist <- histpuntajes(puntajes)
boxplot <- plot_ly(x = ~puntajes, type = "box", boxpoints = "outliers", name = " ") %>%
layout(showlegend = FALSE)
subplot(hist[[1]], boxplot[[1]], nrows = 2, shareX = T) %>%
layout(xaxis = list(title = "Puntaje"),
yaxis = list(title = "Frecuencia"))
#| echo: false
# Módulo razonamiento cuantitativo
i=31
puntajes <- unlist(data[,i])
hist <- histpuntajes(puntajes)
boxplot <- plot_ly(x = ~puntajes, type = "box", boxpoints = "outliers", name = " ") %>%
layout(showlegend = FALSE)
subplot(hist[[1]], boxplot[[1]], nrows = 2, shareX = T) %>%
layout(xaxis = list(title = "Puntaje"),
yaxis = list(title = "Frecuencia"))
#| echo: false
# Módulo razonamiento cuantitativo
i=32
puntajes <- unlist(data[,i])
hist <- histpuntajes(puntajes)
boxplot <- plot_ly(x = ~puntajes, type = "box", boxpoints = "outliers", name = " ") %>%
layout(showlegend = FALSE)
subplot(hist[[1]], boxplot[[1]], nrows = 2, shareX = T) %>%
layout(xaxis = list(title = "Puntaje"),
yaxis = list(title = "Frecuencia"))
#| echo: false
histpuntajes <- function(puntajes) {
h <- hist(puntajes, plot = FALSE)
plot_ly(x = ~puntajes, type = "histogram", name = "Puntaje", nbinsx = 2*length(h$counts)-1, marker = list(color="lightblue1",line = list(color = "white", width = 1))) %>%
layout(yaxis = list(title = "Frecuencia"))
}
#| echo: false
# Módulo razonamiento cuantitativo
i=29
puntajes <- unlist(data[,i])
hist <- histpuntajes(puntajes)
boxplot <- plot_ly(x = ~puntajes, type = "box", boxpoints = "outliers", name = " ") %>%
layout(showlegend = FALSE)
subplot(hist[[1]], boxplot[[1]], nrows = 2, shareX = T) %>%
layout(xaxis = list(title = "Puntaje"),
yaxis = list(title = "Frecuencia"))
#| echo: false
# Módulo razonamiento cuantitativo
i=30
puntajes <- unlist(data[,i])
hist <- histpuntajes(puntajes)
boxplot <- plot_ly(x = ~puntajes, type = "box", boxpoints = "outliers", name = " ") %>%
layout(showlegend = FALSE)
subplot(hist[[1]], boxplot[[1]], nrows = 2, shareX = T) %>%
layout(xaxis = list(title = "Puntaje"),
yaxis = list(title = "Frecuencia"))
#| echo: false
# Módulo razonamiento cuantitativo
i=33
puntajes <- unlist(data[,i])
hist <- histpuntajes(puntajes)
boxplot <- plot_ly(x = ~puntajes, type = "box", boxpoints = "outliers", name = " ") %>%
layout(showlegend = FALSE)
subplot(hist[[1]], boxplot[[1]], nrows = 2, shareX = T) %>%
layout(xaxis = list(title = "Puntaje"),
yaxis = list(title = "Frecuencia"))
#| echo: false
# Módulo razonamiento cuantitativo
i=34
puntajes <- unlist(data[,i])
hist <- histpuntajes(puntajes)
boxplot <- plot_ly(x = ~puntajes, type = "box", boxpoints = "outliers", name = " ") %>%
layout(showlegend = FALSE)
subplot(hist[[1]], boxplot[[1]], nrows = 2, shareX = T) %>%
layout(xaxis = list(title = "Puntaje"),
yaxis = list(title = "Frecuencia"))
str(data)
tc <- table(data$ESTU_GENERO, data$FAMI_ESTRATOVIVIENDA)
tabtc <- cbind(tc, totF = rowSums(tc))
tabtc <- rbind(tabtc, totC=colSums(tabtc))
plotct(t(tc), "row", col=2:5)
library(FactoClass)
library(plotly)
library(knitr)
library(readr)
plotct(t(tc), "row", col=2:5)
plotct(tc, "row", col=2:4)
plotct(t(tc), "row", col=2:10)
plotct(tc, "row", col=2:4)
plotct(tc, "row", col=2:10)
tc <- table(data$ESTU_VALORMATRICULAUNIVERSIDAD, data$FAMI_ESTRATOVIVIENDA)
tabtc <- cbind(tc, totF = rowSums(tc))
tabtc <- rbind(tabtc, totC=colSums(tabtc))
plotct(t(tc), "row", col=2:5)
plotct(tc, "row", col=2:10)
tc <- table(data$ESTU_VALORMATRICULAUNIVERSIDAD, data$FAMI_ESTRATOVIVIENDA)
tabtc <- cbind(tc, totF = rowSums(tc))
tabtc <- rbind(tabtc, totC=colSums(tabtc))
# Gráficos de los perfiles fila y perfiles columna
par(mfrow=c(2,1), mai=c(0.4,1,0.3,0.1))
plotct(t(tc), "row", col=2:5)
plotct(tc, "row", col=2:10)
@article{DataIcfes,title = { DataIcfes: Repositorio de Datos Abiertos del Icfes. 04.Saber11}, note = , author = {{\firstsecond{ICFES}{Instituto Colombiano para la Evaluación de la Educación -Icfes}}}
str(data)
Y <- data[, 29:34]
kable(cor(Y), digits = 3)
library(FactoClass)
library(plotly)
library(knitr)
library(readr)
kable(cor(Y), digits = 3)
heatmap(cor(Y), NA, NA)
Y <- data[, 29:33] # Puntaje global va a ser ilustrativa
kable(cor(Y), digits = 3)
heatmap(cor(Y), NA, NA)
?colnames
colnames(Y)<-c("R.CUANTITATIVO","L.CRITICA","C.CIUDADANA","INGLES","C.ESCRITA")
kable(cor(Y), digits = 3)
heatmap(cor(Y), NA, NA)
acp <- dudi.pca(Y, scannf = FALSE, nf = 3)
valp <- t(inertia(acp)$tot.inertia) # valores propios
kable(valp, digits = 3)
kable(valp, digits = 3)
barplot(acp$eig, horiz = TRUE) # histograma de valores propios
abline(v = 1, lty = 3)
barplot(acp$eig, horiz = TRUE) # histograma de valores propios
abline(v = 1, lty = 3)
kable(acp$co, digits = 3)
kable(acp$co, digits = 2)
?dudi.pca
acp <- dudi.pca(Y, scannf = FALSE, nf = 2)
valp <- t(inertia(acp)$tot.inertia) # valores propios
kable(valp, digits = 3)
barplot(acp$eig, horiz = TRUE) # histograma de valores propios
abline(v = 1, lty = 3)
barplot(acp$eig, horiz = TRUE) # histograma de valores propios
abline(v = 1, lty = 3)
kable(acp$co, digits = 3)
# exam como ilustrativa
GGlob <- cor(data$PUNT_GLOBAL, acp$li)
rownames(GGlob)<-"Global"
kable(GGlob, digits = 3)
s.corcircle(acp$co)
s.arrow(GGlob, add.plot = TRUE, boxes = FALSE)
s.corcircle(acp$co)
s.arrow(GGlob, add.plot = TRUE, boxes = FALSE)
acp1 <- dudi.pca(Y, scannf = FALSE, nf = 3)
rownames(GGlob1)<-"Global"
GGlob1 <- cor(data$PUNT_GLOBAL, acp1$li)
rownames(GGlob1)<-"Global"
s.corcircle(acp1$co)
s.corcircle(acp1$co, xax = 2, yax = 3)
s.arrow(GGlob1, xax = 2, yax = 3,
add.plot = TRUE, boxes = FALSE)
Ysupcat <- data[,1:28]
sup <- supqual(acp, Ysupcat)
str(Ysupcat)
Ysupcat <- data[,c(1,3:4,6:23,26:28)]
sup <- supqual(acp, Ysupcat)
?supcual
?supqual
class(Ysupcat)
Ysupcat <- data[,26:28]
sup <- supqual(acp, Ysupcat)
str(Ysupcat)
Ysupcat<-as.data.frame(Ysupcat)
sup <- supqual(acp, Ysupcat)
Ysupcat <- data[,c(1,3:4,6:23,26:28)]
Ysupcat<-as.data.frame(Ysupcat)
sup <- supqual(acp, Ysupcat)
kable(cbind(wcat = sup$wcat, d2 = sup$dis2, sup$coor),
digits = 3)
kable(cbind(sup$tv, sup$cos2), digits = 3)
plot(acp, Tcol = FALSE, ucal = 100, cex.row = 0.2,
xlim = c(-1,1.5), ylim = c(-0.6,0.6))
points(sup$coor, col = 2, pch = 16)
plot(acp, Tcol = FALSE, ucal = 100, cex.row = 0.2,
xlim = c(-1,1.5), ylim = c(-0.6,0.6))
points(sup$coor, col = 2, pch = 16)
text(sup$coor, labels = rownames(sup$coor),
col = 2, pos = 1, font = 3)
plot(acp, Tcol = FALSE, ucal = 100, cex.row = 0.2,
xlim = c(-1,1.5), ylim = c(-0.6,0.6))
plot(acp, Tcol = FALSE, ucal = 100, cex.row = 0.2,
xlim = c(-1,1.5), ylim = c(-0.6,0.6))
s.arrow(acp$co, add.plot = TRUE, boxes = FALSE)
plot(acp, Tcol = FALSE, ucal = 100, cex.row = 0.2,
xlim = c(-1,1.5), ylim = c(-0.6,0.6))
s.arrow(acp$co, add.plot = TRUE, boxes = FALSE)
s.arrow(Gexam, add.plot = TRUE, boxes = FALSE)
plot(acp, Tcol = FALSE, ucal = 100, cex.row = 0.2,
xlim = c(-1,1.5), ylim = c(-0.6,0.6))
s.arrow(acp$co, add.plot = TRUE, boxes = FALSE)
s.arrow(GGlob, add.plot = TRUE, boxes = FALSE)
points(sup$coor[8:9,], col = 3, pch = 16)
text(sup$coor[8:9,], labels = rownames(sup$coor[8:9,]),
col = 3, pos = 1, font = 3)
plot(sup$coor[1:7,2:3], col = 6, pch = 16,
xlim = c(-1,1), ylim = c(-1,1),
bty="n", axes = FALSE)
sup$coor
max(sup$coor)
min(sup$coor)
plot(sup$coor[-3:3,-3:3], col = 6, pch = 16,
xlim = c(-1,1), ylim = c(-1,1),
bty="n", axes = FALSE)
1
plot(sup$coor[1:7,2:3], col = 6, pch = 16,
xlim = c(-1,1), ylim = c(-1,1),
bty="n", axes = FALSE)
plot(sup$coor[1:7,], col = 6, pch = 16,
xlim = c(-1,1), ylim = c(-1,1),
bty="n", axes = FALSE)
text(sup$coor[1:7,2:3], labels = rownames(sup$coor[1:7,]),
col = 6, pos = 1, font = 3)
plot(sup$coor[1:7,], col = 6, pch = 16,
xlim = c(-1,1), ylim = c(-1,1),
bty="n", axes = FALSE)
text(sup$coor[1:7,], labels = rownames(sup$coor[1:7,]),
col = 6, pos = 1, font = 3)
curve(sqrt(1 - x*x), -1, 1, 1e4, add = TRUE, lty = 3)
curve(-sqrt(1 - x*x), -1, 1, 1e4, add = TRUE, lty = 3)
abline(h=0, col="grey"); abline(v=0, col="grey")
s.arrow(acp$co, add.plot = TRUE, boxes = FALSE,
xax = 1, yax = 2)
s.arrow(Gexam, add.plot = TRUE, boxes = FALSE,
xax = 1, yax = 2)
plot(sup$coor[1:7,], col = 6, pch = 16,
xlim = c(-1,1), ylim = c(-1,1),
bty="n", axes = FALSE)
text(sup$coor[1:7,], labels = rownames(sup$coor[1:7,]),
col = 6, pos = 1, font = 3)
curve(sqrt(1 - x*x), -1, 1, 1e4, add = TRUE, lty = 3)
curve(-sqrt(1 - x*x), -1, 1, 1e4, add = TRUE, lty = 3)
abline(h=0, col="grey"); abline(v=0, col="grey")
s.arrow(acp$co, add.plot = TRUE, boxes = FALSE,
xax = 1, yax = 2)
s.arrow(GGlob, add.plot = TRUE, boxes = FALSE,
xax = 1, yax = 2)
plot(sup$coor[1:3,], col = 6, pch = 16,
xlim = c(-1,1), ylim = c(-1,1),
bty="n", axes = FALSE)
text(sup$coor[1:3,], labels = rownames(sup$coor[1:3,]),
col = 6, pos = 1, font = 3)
curve(sqrt(1 - x*x), -1, 1, 1e4, add = TRUE, lty = 3)
curve(-sqrt(1 - x*x), -1, 1, 1e4, add = TRUE, lty = 3)
abline(h=0, col="grey"); abline(v=0, col="grey")
s.arrow(acp$co, add.plot = TRUE, boxes = FALSE,
xax = 1, yax = 2)
s.arrow(GGlob, add.plot = TRUE, boxes = FALSE,
xax = 1, yax = 2)
plot(sup$coor[1:4,], col = 6, pch = 16,
xlim = c(-1,1), ylim = c(-1,1),
bty="n", axes = FALSE)
text(sup$coor[1:4,], labels = rownames(sup$coor[1:4,]),
col = 6, pos = 1, font = 3)
curve(sqrt(1 - x*x), -1, 1, 1e4, add = TRUE, lty = 3)
curve(-sqrt(1 - x*x), -1, 1, 1e4, add = TRUE, lty = 3)
abline(h=0, col="grey"); abline(v=0, col="grey")
s.arrow(acp$co, add.plot = TRUE, boxes = FALSE,
xax = 1, yax = 2)
s.arrow(GGlob, add.plot = TRUE, boxes = FALSE,
xax = 1, yax = 2)
sup$coor
sup$coor[1:3,]
plot(sup$coor[1:3,], col = 6, pch = 16,
xlim = c(-1,1), ylim = c(-1,1),
bty="n", axes = FALSE)
plot(sup$coor[1:3,], col = 6, pch = 16,
xlim = c(-3,3), ylim = c(-3,3),
bty="n", axes = FALSE)
plot(sup$coor[1:3,], col = 6, pch = 16,
xlim = c(-3,3), ylim = c(-3,3),
bty="n", axes = FALSE)
text(sup$coor[1:3,], labels = rownames(sup$coor[1:3,]),
col = 6, pos = 1, font = 3)
curve(sqrt(1 - x*x), -1, 1, 1e4, add = TRUE, lty = 3)
curve(-sqrt(1 - x*x), -1, 1, 1e4, add = TRUE, lty = 3)
abline(h=0, col="grey"); abline(v=0, col="grey")
s.arrow(acp$co, add.plot = TRUE, boxes = FALSE,
xax = 1, yax = 2)
s.arrow(GGlob, add.plot = TRUE, boxes = FALSE,
xax = 1, yax = 2)
max(sup$coor)
min(sup$coor)
