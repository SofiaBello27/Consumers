# Análisis de Componentes Principales

```{r}
#| echo: false
#| results: hide
#| message: false
#| warning: false

library(FactoClass)
library(plotly)
library(knitr)
library(readr)
library(dplyr)

# Carga de datos originales
saberpro <- read_delim("DATA_ICFES_SABERPROPROFESIONAL_2022-2.TXT", delim = "¬", escape_double = FALSE, trim_ws = TRUE)
kable(head(saberpro), digits=2) 

# nuestros datos
data <- saberpro[,-c(1,2,5:9,13:15,17:21,23:26,28:34,49:54,56:62,65,67:70,72:75,77:82,84:86,88:90,92:94,96:98,100:102,104:109)]

# genero
sum(is.na(data$ESTU_GENERO)) # hay 5 NA'S
data$ESTU_GENERO <- ifelse(is.na(data$ESTU_GENERO), "Desconocido", data$ESTU_GENERO)
data$ESTU_GENERO <- as.factor(data$ESTU_GENERO)
table(data$ESTU_GENERO)

# edad
library(stringr)
edad <- str_sub(data$ESTU_FECHANACIMIENTO,7,10)
edad<-as.numeric(edad)
edades<-2023-edad

# etnia
sum(is.na(data$ESTU_TIENEETNIA)) # 775 na's
data$ESTU_TIENEETNIA <- ifelse(is.na(data$ESTU_TIENEETNIA), "Desconocido", data$ESTU_TIENEETNIA)
data$ESTU_TIENEETNIA <- as.factor(data$ESTU_TIENEETNIA)
table(data$ESTU_TIENEETNIA)


# depto
data$ESTU_DEPTO_RESIDE<-ifelse(data$ESTU_DEPTO_RESIDE %in% c("BARCELONA","BUENOS AIRES","FRANKFURT","HOUSTON","LIMA","MIAMI","NUEVA YORK","PARIS","QUEBEC","ROMA","SACRAMENTO","SANTIAGO DE CHILE","SAO PAULO","SEUL","TRENTON"),"EXTRANJERO",data$ESTU_DEPTO_RESIDE)
sum(is.na(data$ESTU_DEPTO_RESIDE))
length(unique(data$ESTU_DEPTO_RESIDE)) # hay 35 pq son mas los extranjeros y NAs
data$ESTU_DEPTO_RESIDE <- ifelse(is.na(data$ESTU_DEPTO_RESIDE), "Desconocido", data$ESTU_DEPTO_RESIDE)
data$ESTU_DEPTO_RESIDE <- as.factor(data$ESTU_DEPTO_RESIDE)
data <- data %>%
  mutate(ESTU_DEPTO_RESIDE = case_when(
    ESTU_DEPTO_RESIDE == "BOGOTÁ" ~ ESTU_DEPTO_RESIDE,
    ESTU_DEPTO_RESIDE == "Desconocido" ~ "Desconocido",
    TRUE ~ "OTRO"
  ))
data$ESTU_DEPTO_RESIDE <- as.factor(data$ESTU_DEPTO_RESIDE)
table(data$ESTU_DEPTO_RESIDE)


# estado civil
sum(is.na(data$ESTU_ESTADOCIVIL)) # 580 na's
data$ESTU_ESTADOCIVIL <- ifelse(is.na(data$ESTU_ESTADOCIVIL), "Desconocido", data$ESTU_ESTADOCIVIL)
data$ESTU_ESTADOCIVIL <- as.factor(data$ESTU_ESTADOCIVIL)
table(data$ESTU_ESTADOCIVIL)

# valor matricula
## recodificamos para que quede como factor
sum(is.na(data$ESTU_VALORMATRICULAUNIVERSIDAD)) # 2194 na's
data$ESTU_VALORMATRICULAUNIVERSIDAD <- ifelse(is.na(data$ESTU_VALORMATRICULAUNIVERSIDAD), "Desconocido", data$ESTU_VALORMATRICULAUNIVERSIDAD)
data$ESTU_VALORMATRICULAUNIVERSIDAD <- factor(data$ESTU_VALORMATRICULAUNIVERSIDAD, levels = c("Menos de 500 mil","Entre 500 mil y menos de 1 millón", "Entre 1 millón y menos de 2.5 millones", "Entre 2.5 millones y menos de 4 millones","Entre 4 millones y menos de 5.5 millones","Entre 5.5 millones y menos de 7 millones","Más de 7 millones","No pagó matrícula","Desconocido"))
table(data$ESTU_VALORMATRICULAUNIVERSIDAD)

# capacitacion del examen
sum(is.na(data$ESTU_COMOCAPACITOEXAMENSB11)) # 2069 na's
data$ESTU_COMOCAPACITOEXAMENSB11 <- ifelse(is.na(data$ESTU_COMOCAPACITOEXAMENSB11), "Desconocido", data$ESTU_COMOCAPACITOEXAMENSB11)
data$ESTU_COMOCAPACITOEXAMENSB11 <- as.factor(data$ESTU_COMOCAPACITOEXAMENSB11)
table(data$ESTU_COMOCAPACITOEXAMENSB11)


# semestre que cursa
sum(is.na(data$ESTU_SEMESTRECURSA)) # 2194 na's
data$ESTU_SEMESTRECURSA<-ifelse(data$ESTU_SEMESTRECURSA %in% c("01","02","03","04","05","06"),"06 o menos",data$ESTU_SEMESTRECURSA)
data$ESTU_SEMESTRECURSA <- ifelse(is.na(data$ESTU_SEMESTRECURSA), "Desconocido", data$ESTU_SEMESTRECURSA)
data$ESTU_SEMESTRECURSA <- as.factor(data$ESTU_SEMESTRECURSA)
table(data$ESTU_SEMESTRECURSA)

# educacion papa
sum(is.na(data$FAMI_EDUCACIONPADRE)) # 4738 na's
data$FAMI_EDUCACIONPADRE <- ifelse(is.na(data$FAMI_EDUCACIONPADRE), "Desconocido", data$FAMI_EDUCACIONPADRE)
data$FAMI_EDUCACIONPADRE <- as.factor(data$FAMI_EDUCACIONPADRE)
table(data$FAMI_EDUCACIONPADRE)

# educacion mama
sum(is.na(data$FAMI_EDUCACIONMADRE)) # 4886 na's
data$FAMI_EDUCACIONMADRE <- ifelse(is.na(data$FAMI_EDUCACIONMADRE), "Desconocido", data$FAMI_EDUCACIONMADRE)
data$FAMI_EDUCACIONMADRE <- as.factor(data$FAMI_EDUCACIONMADRE)
table(data$FAMI_EDUCACIONMADRE)

# ocupacion papa
sum(is.na(data$FAMI_OCUPACIONPADRE)) # 2060 na's
data$FAMI_OCUPACIONPADRE <- ifelse(is.na(data$FAMI_OCUPACIONPADRE), "Desconocido", data$FAMI_OCUPACIONPADRE)
data$FAMI_OCUPACIONPADRE <- as.factor(data$FAMI_OCUPACIONPADRE)
table(data$FAMI_OCUPACIONPADRE)

# ocupacion mama
sum(is.na(data$FAMI_OCUPACIONMADRE)) # 2060 na's
data$FAMI_OCUPACIONMADRE <- ifelse(is.na(data$FAMI_OCUPACIONMADRE), "Desconocido", data$FAMI_OCUPACIONMADRE)
data$FAMI_OCUPACIONMADRE <- as.factor(data$FAMI_OCUPACIONMADRE)
table(data$FAMI_OCUPACIONMADRE)

# estrato
sum(is.na(data$FAMI_ESTRATOVIVIENDA)) # 5531 na's
data$FAMI_ESTRATOVIVIENDA <- ifelse(is.na(data$FAMI_ESTRATOVIVIENDA), "Desconocido", data$FAMI_ESTRATOVIVIENDA)
data$FAMI_ESTRATOVIVIENDA <- as.factor(data$FAMI_ESTRATOVIVIENDA)
table(data$FAMI_ESTRATOVIVIENDA)


# internet
sum(is.na(data$FAMI_TIENEINTERNET)) # 5697 na's
data$FAMI_TIENEINTERNET <- ifelse(is.na(data$FAMI_TIENEINTERNET), "Desconocido", data$FAMI_TIENEINTERNET)
data$FAMI_TIENEINTERNET <- as.factor(data$FAMI_TIENEINTERNET)
table(data$FAMI_TIENEINTERNET)

# computador
sum(is.na(data$FAMI_TIENECOMPUTADOR)) # 6163 na's
data$FAMI_TIENECOMPUTADOR <- ifelse(is.na(data$FAMI_TIENECOMPUTADOR), "Desconocido", data$FAMI_TIENECOMPUTADOR)
data$FAMI_TIENECOMPUTADOR <- as.factor(data$FAMI_TIENECOMPUTADOR)
table(data$FAMI_TIENECOMPUTADOR)

# lavadora
sum(is.na(data$FAMI_TIENELAVADORA)) # 6354 na's
data$FAMI_TIENELAVADORA <- ifelse(is.na(data$FAMI_TIENELAVADORA), "Desconocido", data$FAMI_TIENELAVADORA)
data$FAMI_TIENELAVADORA <- as.factor(data$FAMI_TIENELAVADORA)
table(data$FAMI_TIENELAVADORA)

# microogas
sum(is.na(data$FAMI_TIENEHORNOMICROOGAS)) # 7019 na's
data$FAMI_TIENEHORNOMICROOGAS <- ifelse(is.na(data$FAMI_TIENEHORNOMICROOGAS), "Desconocido", data$FAMI_TIENEHORNOMICROOGAS)
data$FAMI_TIENEHORNOMICROOGAS <- as.factor(data$FAMI_TIENEHORNOMICROOGAS)
table(data$FAMI_TIENEHORNOMICROOGAS)

# tv
sum(is.na(data$FAMI_TIENESERVICIOTV)) # 5801 na's
data$FAMI_TIENESERVICIOTV <- ifelse(is.na(data$FAMI_TIENESERVICIOTV), "Desconocido", data$FAMI_TIENESERVICIOTV)
data$FAMI_TIENESERVICIOTV <- as.factor(data$FAMI_TIENESERVICIOTV)
table(data$FAMI_TIENESERVICIOTV)

# auto
sum(is.na(data$FAMI_TIENEAUTOMOVIL)) # 7187 na's
data$FAMI_TIENEAUTOMOVIL <- ifelse(is.na(data$FAMI_TIENEAUTOMOVIL), "Desconocido", data$FAMI_TIENEAUTOMOVIL)
data$FAMI_TIENEAUTOMOVIL <- as.factor(data$FAMI_TIENEAUTOMOVIL)
table(data$FAMI_TIENEAUTOMOVIL)

# moto
sum(is.na(data$FAMI_TIENEMOTOCICLETA)) # 7525 na's
data$FAMI_TIENEMOTOCICLETA <- ifelse(is.na(data$FAMI_TIENEMOTOCICLETA), "Desconocido", data$FAMI_TIENEMOTOCICLETA)
data$FAMI_TIENEMOTOCICLETA <- as.factor(data$FAMI_TIENEMOTOCICLETA)
table(data$FAMI_TIENEMOTOCICLETA)

# consola
sum(is.na(data$FAMI_TIENECONSOLAVIDEOJUEGOS)) # 7993 na's
data$FAMI_TIENECONSOLAVIDEOJUEGOS <- ifelse(is.na(data$FAMI_TIENECONSOLAVIDEOJUEGOS), "Desconocido", data$FAMI_TIENECONSOLAVIDEOJUEGOS)
data$FAMI_TIENECONSOLAVIDEOJUEGOS <- as.factor(data$FAMI_TIENECONSOLAVIDEOJUEGOS)
table(data$FAMI_TIENECONSOLAVIDEOJUEGOS)

# horas trabaja
sum(is.na(data$ESTU_HORASSEMANATRABAJA)) # 6867 na's
data$ESTU_HORASSEMANATRABAJA <- ifelse(is.na(data$ESTU_HORASSEMANATRABAJA), "Desconocido", data$ESTU_HORASSEMANATRABAJA)
data$ESTU_HORASSEMANATRABAJA <- factor(data$ESTU_HORASSEMANATRABAJA, levels = c("0", "Menos de 10 horas", "Entre 11 y 20 horas", "Entre 21 y 30 horas", "Más de 30 horas", "Desconocido"))
table(data$ESTU_HORASSEMANATRABAJA)

# grupo de referencia
sum(is.na(data$GRUPOREFERENCIA)) # 0 na's
data$GRUPOREFERENCIA<- as.factor(data$GRUPOREFERENCIA)
table(data$GRUPOREFERENCIA)
str(data$GRUPOREFERENCIA) # 22 niveles

# metodo
sum(is.na(data$ESTU_METODO_PRGM)) # 0 na's
data$ESTU_METODO_PRGM <- ifelse(data$ESTU_METODO_PRGM == "DISTANCIA VITUAL", "DISTANCIA VIRTUAL", data$ESTU_METODO_PRGM)
data$ESTU_METODO_PRGM<- as.factor(data$ESTU_METODO_PRGM)
table(data$ESTU_METODO_PRGM)

# caracter academico institucion
sum(is.na(data$INST_CARACTER_ACADEMICO)) # 0 na's
data$INST_CARACTER_ACADEMICO<- as.factor(data$INST_CARACTER_ACADEMICO)
table(data$INST_CARACTER_ACADEMICO)
```


Miremos la correlación de las variables cuantitativas

```{r}
#| echo: false
Y <- data[, 29:33] # Puntaje global va a ser ilustrativa
colnames(Y)<-c("cuanti","lec","ciu","ing","esc")
kable(cor(Y), digits = 3)
heatmap(cor(Y), NA, NA)
```

Luego de realizar el ACP usando la función $\texttt{dudi.pca}$ de la librería $\texttt{ade4}$, la inercia (o los valores propios de los nuevos ejes) son

```{r}
#| echo: false
acp <- dudi.pca(Y, scannf = FALSE, nf = 2) # nf indica cuantos ejes voy a conservar
valp <- t(inertia(acp)$tot.inertia) # valores propios
kable(valp, digits = 3)

barplot(acp$eig, horiz = TRUE) # histograma de valores propios
abline(v = 1, lty = 3)
```

Para el análisis, se conservan los dos primeros ejes porque el primero tiene un valor propio mayor a 1 y el segundo es cercano a 1, además, con esos dos ejes se tiene casi el 74.41% de la inercia. Cabe mencionarse que como el valor propio del primer eje es casi 3, se puede decir que este eje "explica mucho".

Con los nuevos ejes las nuevas coordenadas son:

```{r}
#| echo: false
kable(acp$co, digits = 3)
s.corcircle(acp$co)
```

Usaremos la variable de "Puntaje global" como ilustrativa y sus nuevas coordenadas son:
 
```{r}
#| echo: false
# exam como ilustrativa
GGlob <- cor(data$PUNT_GLOBAL, acp$li)
rownames(GGlob)<-"Global"
kable(GGlob, digits = 3)
```

```{r}
#| echo: false
s.corcircle(acp$co)
s.arrow(GGlob, add.plot = TRUE, boxes = FALSE)
```

Parece que el Puntaje Global y la mayoría de las varibles excepto "Puntaje de Comunicación Escrita" están muy correlacionadas con el primer eje. 

### ACP tres ejes

Solo para observar, se hace un ACP conservando tres ejes, el segundo plano nos permite ver que el tercer eje separa los puntajes de comprensión escrita, ingles y global, con los puntajes de razonamiento cuantitativo, lectura crítica y competencias ciudadanas. Además, este tercer eje no parece tener mucha correlación con la mayoría de los puntajes a excepción del puntaje de inglés.

```{r}
#| echo: false
acp1 <- dudi.pca(Y, scannf = FALSE, nf = 3) 
GGlob1 <- cor(data$PUNT_GLOBAL, acp1$li)

# Plano con los ejes 1 y 2
rownames(GGlob1)<-"Global"
#s.corcircle(acp1$co)
#s.arrow(GGlob1, add.plot = TRUE, boxes = FALSE)

# Plano con los ejes 2 y 3
s.corcircle(acp1$co, xax = 2, yax = 3)
s.arrow(GGlob1, xax = 2, yax = 3, 
        add.plot = TRUE, boxes = FALSE)
```

::: {.callout-important}
ESTO DEBERÍAMOS PONERLO DE OTRA FORMA Y EN OTRO LADO. Se quitaron las variables INST_NOMBRE_INSTITUCION, ESTU_PRGM_ACADEMICO, ESTU_COD_RESIDE_DEPTO y ESTU_FECHANACIMIENTO
:::

```{r}
#| echo: false
Ysupcat <- data[,c(1,3:4,6:23,26:28)]
Ysupcat<-as.data.frame(Ysupcat)
sup <- supqual(acp, Ysupcat)
```

```{r}
#| echo: false
#| eval: false
kable(cbind(wcat = sup$wcat, d2 = sup$dis2, sup$coor), 
      digits = 3)
kable(cbind(sup$tv, sup$cos2), digits = 3)
```

::: {.callout-note}
Note que para el análisis del ACP se continuó teniendo en cuenta únicamente dos ejes.
:::

## Variables relacionadas con la información personal

::: panel-tabset

## Sexo

Los pesos, distancias al cuadrado y las nuevas coordenadas son:

```{r}
#| echo: false
pes_dist_coor<-cbind(wcat = sup$wcat, d2 = sup$dis2, sup$coor)
kable(pes_dist_coor[1:3,], 
      digits = 3)
```


Los valores test y los cosenos cuadrados son:

```{r}
#| echo: false
test_cos<-cbind(sup$tv, sup$cos2)
kable(head(test_cos[1:3,]), digits = 3)
```

```{r}
#| echo: false
#| eval: false
plot(sup$coor[1:3,], col = 6, pch = 16,
     #xlim = c(-1,1), ylim = c(-1,1), # si le ponemos esta linea entonces queda de -1 a 1 pero no se ve Desconocido
     xlim = c(min(sup$coor[1:3,]-0.2),1), ylim = c(-1,1),
     bty="n", axes = FALSE)
text(sup$coor[1:3,], labels = rownames(sup$coor[1:3,]),
     col = 6, pos = 1, font = 3)
curve(sqrt(1 - x*x), -1, 1, 1e4, add = TRUE, lty = 3)
curve(-sqrt(1 - x*x), -1, 1, 1e4, add = TRUE, lty = 3)
abline(h=0, col="grey"); abline(v=0, col="grey")
s.arrow(acp$co, add.plot = TRUE, boxes = T,
        xax = 1, yax = 2)
s.arrow(GGlob, add.plot = TRUE, boxes = FALSE,
        xax = 1, yax = 2)
```

```{r}
#| echo: false
plot(acp, Tcol = FALSE, ucal = 100, cex.row = 0,
     xlim = c(min(sup$coor[1:3,]-0.2),1), ylim = c(-1, 1), plot.axes = FALSE)
s.arrow(acp$co, add.plot = TRUE, boxes = T)
s.arrow(GGlob, add.plot = TRUE, boxes = FALSE)
points(sup$coor[1:3,], col = 6, pch = 16)
text(sup$coor[1:3,], labels = rownames(sup$coor[1:3,]),
     col = 6, pos = 1, font = 3, srt=-45)
```


## Etnia

Los pesos, distancias al cuadrado y las nuevas coordenadas son:

```{r}
#| echo: false
kable(pes_dist_coor[4:6,], 
      digits = 3)
```


Los valores test y los cosenos cuadrados son:

```{r}
#| echo: false
kable(head(test_cos[4:6,]), digits = 3)
```

```{r}
#| echo: false
#| eval: false
plot(sup$coor[4:6,], col = 6, pch = 16,
     xlim = c(-1,1), ylim = c(-1,1),
     bty="n", axes = FALSE)
text(sup$coor[4:6,], labels = rownames(sup$coor[4:6,]),
     col = 6, pos = 1, font = 3)
curve(sqrt(1 - x*x), -1, 1, 1e4, add = TRUE, lty = 3)
curve(-sqrt(1 - x*x), -1, 1, 1e4, add = TRUE, lty = 3)
abline(h=0, col="grey"); abline(v=0, col="grey")
s.arrow(acp$co, add.plot = TRUE, boxes = T,
        xax = 1, yax = 2)
s.arrow(GGlob, add.plot = TRUE, boxes = FALSE,
        xax = 1, yax = 2)
```

```{r}
#| echo: false
plot(acp, Tcol = FALSE, ucal = 100, cex.row = 0,
     xlim = c(min(sup$coor[4:6,]-0.2),1), ylim = c(-1, 1), plot.axes = FALSE)
s.arrow(acp$co, add.plot = TRUE, boxes = T)
s.arrow(GGlob, add.plot = TRUE, boxes = FALSE)
points(sup$coor[4:6,], col = 6, pch = 16)
text(sup$coor[4:6,], labels = rownames(sup$coor[4:6,]),
     col = 6, pos = 1, font = 3, srt=-45)
```

## Departamento

Los pesos, distancias al cuadrado y las nuevas coordenadas son:

```{r}
#| echo: false
kable(pes_dist_coor[7:9,], 
      digits = 3)
```


Los valores test y los cosenos cuadrados son:

```{r}
#| echo: false
kable(head(test_cos[7:9,]), digits = 3)
```

```{r}
#| echo: false
#| eval: false
plot(sup$coor[7:9,], col = 6, pch = 16,
     xlim = c(-1,1), ylim = c(-1,1),
     bty="n", axes = FALSE)
text(sup$coor[7:9,], labels = rownames(sup$coor[7:9,]),
     col = 6, pos = 1, font = 3)
curve(sqrt(1 - x*x), -1, 1, 1e4, add = TRUE, lty = 3)
curve(-sqrt(1 - x*x), -1, 1, 1e4, add = TRUE, lty = 3)
abline(h=0, col="grey"); abline(v=0, col="grey")
s.arrow(acp$co, add.plot = TRUE, boxes = T,
        xax = 1, yax = 2)
s.arrow(GGlob, add.plot = TRUE, boxes = FALSE,
        xax = 1, yax = 2)
```

```{r}
#| echo: false
plot(acp, Tcol = FALSE, ucal = 100, cex.row = 0,
     xlim = c(min(sup$coor[7:9,]-0.2),1), ylim = c(-1, 1), plot.axes = FALSE)
s.arrow(acp$co, add.plot = TRUE, boxes = T)
s.arrow(GGlob, add.plot = TRUE, boxes = FALSE)
points(sup$coor[7:9,], col = 6, pch = 16)
text(sup$coor[7:9,], labels = rownames(sup$coor[7:9,]),
     col = 6, pos = 1, font = 3, srt=-45)
```

## Estado civil

Los pesos, distancias al cuadrado y las nuevas coordenadas son:

```{r}
#| echo: false
kable(pes_dist_coor[10:14,], 
      digits = 3)
```


Los valores test y los cosenos cuadrados son:

```{r}
#| echo: false
kable(head(test_cos[10:14,]), digits = 3)
```

```{r}
#| echo: false
#| eval: false
plot(sup$coor[10:14,], col = 6, pch = 16,
     xlim = c(-1,1), ylim = c(-1,1),
     bty="n", axes = FALSE)
text(sup$coor[10:14,], labels = rownames(sup$coor[10:14,],),
     col = 6, pos = 1, font = 3, srt=-45) # srt es para rotar el texto
curve(sqrt(1 - x*x), -1, 1, 1e4, add = TRUE, lty = 3)
curve(-sqrt(1 - x*x), -1, 1, 1e4, add = TRUE, lty = 3)
abline(h=0, col="grey"); abline(v=0, col="grey")
s.arrow(acp$co, add.plot = TRUE, boxes = T,
        xax = 1, yax = 2)
s.arrow(GGlob, add.plot = TRUE, boxes = FALSE,
        xax = 1, yax = 2)
```

```{r}
#| echo: false
plot(acp, Tcol = FALSE, ucal = 100, cex.row = 0,
     xlim = c(min(sup$coor[10:14,]-0.2),1), ylim = c(-1, 1), plot.axes = FALSE)
s.arrow(acp$co, add.plot = TRUE, boxes = T)
s.arrow(GGlob, add.plot = TRUE, boxes = FALSE)
points(sup$coor[10:14,], col = 6, pch = 16)
text(sup$coor[10:14,], labels = rownames(sup$coor[10:14,]),
     col = 6, pos = 1, font = 3, srt=-45)
```

## Educación padre

Los pesos, distancias al cuadrado y las nuevas coordenadas son:

```{r}
#| echo: false
kable(pes_dist_coor[36:48,], digits = 3)
```

Los valores test y los cosenos cuadrados son:

```{r}
#| echo: false
kable(head(test_cos[36:48,]), digits = 3)
```

```{r}
#| echo: false
#| eval: false
plot(sup$coor[36:48,], col = 6, pch = 16,
     xlim = c(-1,1), ylim = c(-1,1),
     bty="n", axes = FALSE)
text(sup$coor[36:48,], labels = rownames(sup$coor[36:48,],),
     col = 6, pos = 1, font = 3, srt=-45) # srt es para rotar el texto
curve(sqrt(1 - x*x), -1, 1, 1e4, add = TRUE, lty = 3)
curve(-sqrt(1 - x*x), -1, 1, 1e4, add = TRUE, lty = 3)
abline(h=0, col="grey"); abline(v=0, col="grey")
s.arrow(acp$co, add.plot = TRUE, boxes = T,
        xax = 1, yax = 2)
s.arrow(GGlob, add.plot = TRUE, boxes = FALSE,
        xax = 1, yax = 2)
```

```{r}
#| echo: false
plot(acp, Tcol = FALSE, ucal = 100, cex.row = 0,
     xlim = c(min(sup$coor[36:48,]-0.2),1), ylim = c(-1, 1), plot.axes = FALSE)
s.arrow(acp$co, add.plot = TRUE, boxes = T)
s.arrow(GGlob, add.plot = TRUE, boxes = FALSE)
points(sup$coor[36:48,], col = 6, pch = 16)
text(sup$coor[36:48,], labels = rownames(sup$coor[36:48,]),
     col = 6, pos = 1, font = 3, srt=-45)
```

## Educación madre

Los pesos, distancias al cuadrado y las nuevas coordenadas son:

```{r}
#| echo: false
kable(pes_dist_coor[49:61,], digits = 3)
```

Los valores test y los cosenos cuadrados son:

```{r}
#| echo: false
kable(head(test_cos[49:61,]), digits = 3)
```

```{r}
#| echo: false
#| eval: false
plot(sup$coor[49:61,], col = 6, pch = 16,
     xlim = c(-1,1), ylim = c(-1,1),
     bty="n", axes = FALSE)
text(sup$coor[49:61,], labels = rownames(sup$coor[49:61,],),
     col = 6, pos = 1, font = 3, srt=-45) # srt es para rotar el texto
curve(sqrt(1 - x*x), -1, 1, 1e4, add = TRUE, lty = 3)
curve(-sqrt(1 - x*x), -1, 1, 1e4, add = TRUE, lty = 3)
abline(h=0, col="grey"); abline(v=0, col="grey")
s.arrow(acp$co, add.plot = TRUE, boxes = T,
        xax = 1, yax = 2)
s.arrow(GGlob, add.plot = TRUE, boxes = FALSE,
        xax = 1, yax = 2)
```

```{r}
#| echo: false
plot(acp, Tcol = FALSE, ucal = 100, cex.row = 0,
     xlim = c(min(sup$coor[49:61,]-0.2),1), ylim = c(-1, 1), plot.axes = FALSE)
s.arrow(acp$co, add.plot = TRUE, boxes = T)
s.arrow(GGlob, add.plot = TRUE, boxes = FALSE)
points(sup$coor[49:61,], col = 6, pch = 16)
text(sup$coor[49:61,], labels = rownames(sup$coor[49:61,]),
     col = 6, pos = 1, font = 3, srt=-45)
```

## Ocupación padre

Los pesos, distancias al cuadrado y las nuevas coordenadas son:

```{r}
#| echo: false
kable(pes_dist_coor[62:74,], digits = 3)
```

Los valores test y los cosenos cuadrados son:

```{r}
#| echo: false
kable(head(test_cos[62:74,]), digits = 3)
```

```{r}
#| echo: false
#| eval: false
plot(sup$coor[62:74,], col = 6, pch = 16,
     xlim = c(-1,1), ylim = c(-1,1),
     bty="n", axes = FALSE)
text(sup$coor[62:74,], labels = rownames(sup$coor[62:74,],),
     col = 6, pos = 1, font = 3, srt=-45) # srt es para rotar el texto
curve(sqrt(1 - x*x), -1, 1, 1e4, add = TRUE, lty = 3)
curve(-sqrt(1 - x*x), -1, 1, 1e4, add = TRUE, lty = 3)
abline(h=0, col="grey"); abline(v=0, col="grey")
s.arrow(acp$co, add.plot = TRUE, boxes = T,
        xax = 1, yax = 2)
s.arrow(GGlob, add.plot = TRUE, boxes = FALSE,
        xax = 1, yax = 2)
```

```{r}
#| echo: false
plot(acp, Tcol = FALSE, ucal = 100, cex.row = 0,
     xlim = c(min(sup$coor[62:74,]-0.2),1), ylim = c(-1, 1), plot.axes = FALSE)
s.arrow(acp$co, add.plot = TRUE, boxes = T)
s.arrow(GGlob, add.plot = TRUE, boxes = FALSE)
points(sup$coor[62:74,], col = 6, pch = 16)
text(sup$coor[62:74,], labels = rownames(sup$coor[62:74,]),
     col = 6, pos = 1, font = 3, srt=-45)
```

## Ocupación madre

Los pesos, distancias al cuadrado y las nuevas coordenadas son:

```{r}
#| echo: false
kable(pes_dist_coor[75:87,], digits = 3)
```

Los valores test y los cosenos cuadrados son:

```{r}
#| echo: false
kable(head(test_cos[75:87,]), digits = 3)
```

```{r}
#| echo: false
#| eval: false
plot(sup$coor[75:87,], col = 6, pch = 16,
     xlim = c(-1,1), ylim = c(-1,1),
     bty="n", axes = FALSE)
text(sup$coor[75:87,], labels = rownames(sup$coor[75:87,],),
     col = 6, pos = 1, font = 3, srt=-45) # srt es para rotar el texto
curve(sqrt(1 - x*x), -1, 1, 1e4, add = TRUE, lty = 3)
curve(-sqrt(1 - x*x), -1, 1, 1e4, add = TRUE, lty = 3)
abline(h=0, col="grey"); abline(v=0, col="grey")
s.arrow(acp$co, add.plot = TRUE, boxes = T,
        xax = 1, yax = 2)
s.arrow(GGlob, add.plot = TRUE, boxes = FALSE,
        xax = 1, yax = 2)
```

```{r}
#| echo: false
plot(acp, Tcol = FALSE, ucal = 100, cex.row = 0,
     xlim = c(min(sup$coor[75:87,]-0.2),1), ylim = c(-1, 1), plot.axes = FALSE)
s.arrow(acp$co, add.plot = TRUE, boxes = T)
s.arrow(GGlob, add.plot = TRUE, boxes = FALSE)
points(sup$coor[75:87,], col = 6, pch = 16)
text(sup$coor[75:87,], labels = rownames(sup$coor[75:87,]),
     col = 6, pos = 1, font = 3, srt=-45)
```

## Horas trabaja

Los pesos, distancias al cuadrado y las nuevas coordenadas son:

```{r}
#| echo: false
kable(pes_dist_coor[120:125,], digits = 3)
```

Los valores test y los cosenos cuadrados son:

```{r}
#| echo: false
kable(head(test_cos[120:125,]), digits = 3)
```

```{r}
#| echo: false
#| eval: false
plot(sup$coor[120:125,], col = 6, pch = 16,
     xlim = c(-1,1), ylim = c(-1,1),
     bty="n", axes = FALSE)
text(sup$coor[120:125,], labels = rownames(sup$coor[120:125,],),
     col = 6, pos = 1, font = 3, srt=-45) # srt es para rotar el texto
curve(sqrt(1 - x*x), -1, 1, 1e4, add = TRUE, lty = 3)
curve(-sqrt(1 - x*x), -1, 1, 1e4, add = TRUE, lty = 3)
abline(h=0, col="grey"); abline(v=0, col="grey")
s.arrow(acp$co, add.plot = TRUE, boxes = T,
        xax = 1, yax = 2)
s.arrow(GGlob, add.plot = TRUE, boxes = FALSE,
        xax = 1, yax = 2)
```

```{r}
#| echo: false
plot(acp, Tcol = FALSE, ucal = 100, cex.row = 0,
     xlim = c(min(sup$coor[120:125,]-0.2),1), ylim = c(-1, 1), plot.axes = FALSE)
s.arrow(acp$co, add.plot = TRUE, boxes = T)
s.arrow(GGlob, add.plot = TRUE, boxes = FALSE)
points(sup$coor[120:125,], col = 6, pch = 16)
text(sup$coor[120:125,], labels = rownames(sup$coor[120:125,]),
     col = 6, pos = 1, font = 3, srt=-45)
```

:::

## Variables relacionadas con la información académica

::: panel-tabset

## Capacitación examen

Los pesos, distancias al cuadrado y las nuevas coordenadas son:

```{r}
#| echo: false
kable(pes_dist_coor[24:27,], 
      digits = 3)
```


Los valores test y los cosenos cuadrados son:

```{r}
#| echo: false
kable(head(test_cos[24:27,]), digits = 3)
```

```{r}
#| echo: false
#| eval: false
plot(sup$coor[24:27,], col = 6, pch = 16,
     xlim = c(-1,1), ylim = c(-1,1),
     bty="n", axes = FALSE)
text(sup$coor[24:27,], labels = rownames(sup$coor[24:27,],),
     col = 6, pos = 1, font = 3, srt=-45) # srt es para rotar el texto
curve(sqrt(1 - x*x), -1, 1, 1e4, add = TRUE, lty = 3)
curve(-sqrt(1 - x*x), -1, 1, 1e4, add = TRUE, lty = 3)
abline(h=0, col="grey"); abline(v=0, col="grey")
s.arrow(acp$co, add.plot = TRUE, boxes = T,
        xax = 1, yax = 2)
s.arrow(GGlob, add.plot = TRUE, boxes = FALSE,
        xax = 1, yax = 2)
```

```{r}
#| echo: false
plot(acp, Tcol = FALSE, ucal = 100, cex.row = 0,
     xlim = c(min(sup$coor[24:27,]-0.2),1), ylim = c(-1, 1), plot.axes = FALSE)
s.arrow(acp$co, add.plot = TRUE, boxes = T)
s.arrow(GGlob, add.plot = TRUE, boxes = FALSE)
points(sup$coor[24:27,], col = 6, pch = 16)
text(sup$coor[24:27,], labels = rownames(sup$coor[24:27,]),
     col = 6, pos = 1, font = 3, srt=-45)
```

## Semestre que cursa

Los pesos, distancias al cuadrado y las nuevas coordenadas son:

```{r}
#| echo: false
kable(pes_dist_coor[28:35,], digits = 3)
```

Los valores test y los cosenos cuadrados son:

```{r}
#| echo: false
kable(head(test_cos[28:35,]), digits = 3)
```

```{r}
#| echo: false
#| eval: false
plot(sup$coor[28:35,], col = 6, pch = 16,
     xlim = c(-1,1), ylim = c(-1,1),
     bty="n", axes = FALSE)
text(sup$coor[28:35,], labels = rownames(sup$coor[28:35,],),
     col = 6, pos = 1, font = 3, srt=-45) # srt es para rotar el texto
curve(sqrt(1 - x*x), -1, 1, 1e4, add = TRUE, lty = 3)
curve(-sqrt(1 - x*x), -1, 1, 1e4, add = TRUE, lty = 3)
abline(h=0, col="grey"); abline(v=0, col="grey")
s.arrow(acp$co, add.plot = TRUE, boxes = T,
        xax = 1, yax = 2)
s.arrow(GGlob, add.plot = TRUE, boxes = FALSE,
        xax = 1, yax = 2)
```

```{r}
#| echo: false
plot(acp, Tcol = FALSE, ucal = 100, cex.row = 0,
     xlim = c(min(sup$coor[28:35,]-0.2),1), ylim = c(-1, 1), plot.axes = FALSE)
s.arrow(acp$co, add.plot = TRUE, boxes = T)
s.arrow(GGlob, add.plot = TRUE, boxes = FALSE)
points(sup$coor[28:35,], col = 6, pch = 16)
text(sup$coor[28:35,], labels = rownames(sup$coor[28:35,]),
     col = 6, pos = 1, font = 3, srt=-45)
```

## Grupo referencia

Los pesos, distancias al cuadrado y las nuevas coordenadas son:

```{r}
#| echo: false
kable(pes_dist_coor[126:147,], digits = 3)
```

Los valores test y los cosenos cuadrados son:

```{r}
#| echo: false
kable(head(test_cos[126:147,]), digits = 3)
```

```{r}
#| echo: false
#| eval: false
plot(sup$coor[126:147,], col = 6, pch = 16,
     xlim = c(-1,1), ylim = c(-1,1),
     bty="n", axes = FALSE)
text(sup$coor[126:147,], labels = rownames(sup$coor[126:147,],),
     col = 6, pos = 1, font = 3, srt=-45) # srt es para rotar el texto
curve(sqrt(1 - x*x), -1, 1, 1e4, add = TRUE, lty = 3)
curve(-sqrt(1 - x*x), -1, 1, 1e4, add = TRUE, lty = 3)
abline(h=0, col="grey"); abline(v=0, col="grey")
s.arrow(acp$co, add.plot = TRUE, boxes = T,
        xax = 1, yax = 2)
s.arrow(GGlob, add.plot = TRUE, boxes = FALSE,
        xax = 1, yax = 2)
```

```{r}
#| echo: false
plot(acp, Tcol = FALSE, ucal = 100, cex.row = 0,
     xlim = c(min(sup$coor[126:147,]-0.2),1), ylim = c(-1, 1), plot.axes = FALSE)
s.arrow(acp$co, add.plot = TRUE, boxes = T)
s.arrow(GGlob, add.plot = TRUE, boxes = FALSE)
points(sup$coor[126:147,], col = 6, pch = 16)
text(sup$coor[126:147,], labels = rownames(sup$coor[126:147,]),
     col = 6, pos = 1, font = 3, srt=-45)
```

## Modalidad

Los pesos, distancias al cuadrado y las nuevas coordenadas son:

```{r}
#| echo: false
kable(pes_dist_coor[148:150,], digits = 3)
```

Los valores test y los cosenos cuadrados son:

```{r}
#| echo: false
kable(head(test_cos[148:150,]), digits = 3)
```

```{r}
#| echo: false
#| eval: false
plot(sup$coor[148:150,], col = 6, pch = 16,
     xlim = c(-1,1), ylim = c(-1,1),
     bty="n", axes = FALSE)
text(sup$coor[148:150,], labels = rownames(sup$coor[148:150,],),
     col = 6, pos = 1, font = 3, srt=-45) # srt es para rotar el texto
curve(sqrt(1 - x*x), -1, 1, 1e4, add = TRUE, lty = 3)
curve(-sqrt(1 - x*x), -1, 1, 1e4, add = TRUE, lty = 3)
abline(h=0, col="grey"); abline(v=0, col="grey")
s.arrow(acp$co, add.plot = TRUE, boxes = T,
        xax = 1, yax = 2)
s.arrow(GGlob, add.plot = TRUE, boxes = FALSE,
        xax = 1, yax = 2)
```

```{r}
#| echo: false
plot(acp, Tcol = FALSE, ucal = 100, cex.row = 0,
     xlim = c(min(sup$coor[148:150,]-0.2),1), ylim = c(-1, 1), plot.axes = FALSE)
s.arrow(acp$co, add.plot = TRUE, boxes = T)
s.arrow(GGlob, add.plot = TRUE, boxes = FALSE)
points(sup$coor[148:150,], col = 6, pch = 16)
text(sup$coor[148:150,], labels = rownames(sup$coor[148:150,]),
     col = 6, pos = 1, font = 3, srt=-45)
```

## Carácter académico

Los pesos, distancias al cuadrado y las nuevas coordenadas son:

```{r}
#| echo: false
kable(pes_dist_coor[151:154,], digits = 3)
```

Los valores test y los cosenos cuadrados son:

```{r}
#| echo: false
kable(head(test_cos[151:154,]), digits = 3)
```

```{r}
#| echo: false
#| eval: false
plot(sup$coor[151:154,], col = 6, pch = 16,
     xlim = c(-1,1), ylim = c(-1,1),
     bty="n", axes = FALSE)
text(sup$coor[151:154,], labels = rownames(sup$coor[151:154,],),
     col = 6, pos = 1, font = 3, srt=-45) # srt es para rotar el texto
curve(sqrt(1 - x*x), -1, 1, 1e4, add = TRUE, lty = 3)
curve(-sqrt(1 - x*x), -1, 1, 1e4, add = TRUE, lty = 3)
abline(h=0, col="grey"); abline(v=0, col="grey")
s.arrow(acp$co, add.plot = TRUE, boxes = T,
        xax = 1, yax = 2)
s.arrow(GGlob, add.plot = TRUE, boxes = FALSE,
        xax = 1, yax = 2)
```

```{r}
#| echo: false
plot(acp, Tcol = FALSE, ucal = 100, cex.row = 0,
     xlim = c(min(sup$coor[151:154,]-0.2),1), ylim = c(-1, 1), plot.axes = FALSE)
s.arrow(acp$co, add.plot = TRUE, boxes = T)
s.arrow(GGlob, add.plot = TRUE, boxes = FALSE)
points(sup$coor[151:154,], col = 6, pch = 16)
text(sup$coor[151:154,], labels = rownames(sup$coor[151:154,]),
     col = 6, pos = 1, font = 3, srt=-45)
```

:::

## Variables relacionadas con la información socioeconómica

::: panel-tabset

## Valor matrícula

Los pesos, distancias al cuadrado y las nuevas coordenadas son:

```{r}
#| echo: false
kable(pes_dist_coor[15:23,], 
      digits = 3)
```


Los valores test y los cosenos cuadrados son:

```{r}
#| echo: false
kable(head(test_cos[15:23,]), digits = 3)
```

```{r}
#| echo: false
#| eval: false
plot(sup$coor[15:23,], col = 6, pch = 16,
     xlim = c(-1,1), ylim = c(-1,1),
     bty="n", axes = FALSE)
text(sup$coor[15:23,], labels = rownames(sup$coor[15:23,],),
     col = 6, pos = 1, font = 3, srt=-45) # srt es para rotar el texto
curve(sqrt(1 - x*x), -1, 1, 1e4, add = TRUE, lty = 3)
curve(-sqrt(1 - x*x), -1, 1, 1e4, add = TRUE, lty = 3)
abline(h=0, col="grey"); abline(v=0, col="grey")
s.arrow(acp$co, add.plot = TRUE, boxes = T,
        xax = 1, yax = 2)
s.arrow(GGlob, add.plot = TRUE, boxes = FALSE,
        xax = 1, yax = 2)
```

```{r}
#| echo: false
plot(acp, Tcol = FALSE, ucal = 100, cex.row = 0,
     xlim = c(min(sup$coor[15:23,]-0.2),1), ylim = c(-1, 1), plot.axes = FALSE)
s.arrow(acp$co, add.plot = TRUE, boxes = T)
s.arrow(GGlob, add.plot = TRUE, boxes = FALSE)
points(sup$coor[15:23,], col = 6, pch = 16)
text(sup$coor[15:23,], labels = rownames(sup$coor[15:23,]),
     col = 6, pos = 1, font = 3, srt=-45)
```

## Estrato

Los pesos, distancias al cuadrado y las nuevas coordenadas son:

```{r}
#| echo: false
kable(pes_dist_coor[88:95,], digits = 3)
```

Los valores test y los cosenos cuadrados son:

```{r}
#| echo: false
kable(head(test_cos[88:95,]), digits = 3)
```

```{r}
#| echo: false
#| eval: false
plot(sup$coor[88:95,], col = 6, pch = 16,
     xlim = c(-1,1), ylim = c(-1,1),
     bty="n", axes = FALSE)
text(sup$coor[88:95,], labels = rownames(sup$coor[88:95,],),
     col = 6, pos = 1, font = 3, srt=-45) # srt es para rotar el texto
curve(sqrt(1 - x*x), -1, 1, 1e4, add = TRUE, lty = 3)
curve(-sqrt(1 - x*x), -1, 1, 1e4, add = TRUE, lty = 3)
abline(h=0, col="grey"); abline(v=0, col="grey")
s.arrow(acp$co, add.plot = TRUE, boxes = T,
        xax = 1, yax = 2)
s.arrow(GGlob, add.plot = TRUE, boxes = FALSE,
        xax = 1, yax = 2)
```

```{r}
#| echo: false
plot(acp, Tcol = FALSE, ucal = 100, cex.row = 0,
     xlim = c(min(sup$coor[88:95,]-0.2),1), ylim = c(-1, 1), plot.axes = FALSE)
s.arrow(acp$co, add.plot = TRUE, boxes = T)
s.arrow(GGlob, add.plot = TRUE, boxes = FALSE)
points(sup$coor[88:95,], col = 6, pch = 16)
text(sup$coor[88:95,], labels = rownames(sup$coor[88:95,]),
     col = 6, pos = 1, font = 3, srt=-45)
```

## Internet

Los pesos, distancias al cuadrado y las nuevas coordenadas son:

```{r}
#| echo: false
kable(pes_dist_coor[96:98,], digits = 3)
```

Los valores test y los cosenos cuadrados son:

```{r}
#| echo: false
kable(head(test_cos[96:98,]), digits = 3)
```

```{r}
#| echo: false
#| eval: false
plot(sup$coor[96:98,], col = 6, pch = 16,
     xlim = c(-1,1), ylim = c(-1,1),
     bty="n", axes = FALSE)
text(sup$coor[96:98,], labels = rownames(sup$coor[96:98,],),
     col = 6, pos = 1, font = 3, srt=-45) # srt es para rotar el texto
curve(sqrt(1 - x*x), -1, 1, 1e4, add = TRUE, lty = 3)
curve(-sqrt(1 - x*x), -1, 1, 1e4, add = TRUE, lty = 3)
abline(h=0, col="grey"); abline(v=0, col="grey")
s.arrow(acp$co, add.plot = TRUE, boxes = T,
        xax = 1, yax = 2)
s.arrow(GGlob, add.plot = TRUE, boxes = FALSE,
        xax = 1, yax = 2)
```

```{r}
#| echo: false
plot(acp, Tcol = FALSE, ucal = 100, cex.row = 0,
     xlim = c(min(sup$coor[96:98,]-0.2),1), ylim = c(-1, 1), plot.axes = FALSE)
s.arrow(acp$co, add.plot = TRUE, boxes = T)
s.arrow(GGlob, add.plot = TRUE, boxes = FALSE)
points(sup$coor[96:98,], col = 6, pch = 16)
text(sup$coor[96:98,], labels = rownames(sup$coor[96:98,]),
     col = 6, pos = 1, font = 3, srt=-45)
```

## Computador

Los pesos, distancias al cuadrado y las nuevas coordenadas son:

```{r}
#| echo: false
kable(pes_dist_coor[99:101,], digits = 3)
```

Los valores test y los cosenos cuadrados son:

```{r}
#| echo: false
kable(head(test_cos[99:101,]), digits = 3)
```

```{r}
#| echo: false
#| eval: false
plot(sup$coor[99:101,], col = 6, pch = 16,
     xlim = c(-1,1), ylim = c(-1,1),
     bty="n", axes = FALSE)
text(sup$coor[99:101,], labels = rownames(sup$coor[99:101,],),
     col = 6, pos = 1, font = 3, srt=-45) # srt es para rotar el texto
curve(sqrt(1 - x*x), -1, 1, 1e4, add = TRUE, lty = 3)
curve(-sqrt(1 - x*x), -1, 1, 1e4, add = TRUE, lty = 3)
abline(h=0, col="grey"); abline(v=0, col="grey")
s.arrow(acp$co, add.plot = TRUE, boxes = T,
        xax = 1, yax = 2)
s.arrow(GGlob, add.plot = TRUE, boxes = FALSE,
        xax = 1, yax = 2)
```

```{r}
#| echo: false
plot(acp, Tcol = FALSE, ucal = 100, cex.row = 0,
     xlim = c(min(sup$coor[99:101,]-0.2),1), ylim = c(-1, 1), plot.axes = FALSE)
s.arrow(acp$co, add.plot = TRUE, boxes = T)
s.arrow(GGlob, add.plot = TRUE, boxes = FALSE)
points(sup$coor[99:101,], col = 6, pch = 16)
text(sup$coor[99:101,], labels = rownames(sup$coor[99:101,]),
     col = 6, pos = 1, font = 3, srt=-45)
```

## Lavadora

Los pesos, distancias al cuadrado y las nuevas coordenadas son:

```{r}
#| echo: false
kable(pes_dist_coor[102:104,], digits = 3)
```

Los valores test y los cosenos cuadrados son:

```{r}
#| echo: false
kable(head(test_cos[102:104,]), digits = 3)
```

```{r}
#| echo: false
#| eval: false
plot(sup$coor[102:104,], col = 6, pch = 16,
     xlim = c(-1,1), ylim = c(-1,1),
     bty="n", axes = FALSE)
text(sup$coor[102:104,], labels = rownames(sup$coor[102:104,],),
     col = 6, pos = 1, font = 3, srt=-45) # srt es para rotar el texto
curve(sqrt(1 - x*x), -1, 1, 1e4, add = TRUE, lty = 3)
curve(-sqrt(1 - x*x), -1, 1, 1e4, add = TRUE, lty = 3)
abline(h=0, col="grey"); abline(v=0, col="grey")
s.arrow(acp$co, add.plot = TRUE, boxes = T,
        xax = 1, yax = 2)
s.arrow(GGlob, add.plot = TRUE, boxes = FALSE,
        xax = 1, yax = 2)
```

```{r}
#| echo: false
plot(acp, Tcol = FALSE, ucal = 100, cex.row = 0,
     xlim = c(min(sup$coor[102:104,]-0.2),1), ylim = c(-1, 1), plot.axes = FALSE)
s.arrow(acp$co, add.plot = TRUE, boxes = T)
s.arrow(GGlob, add.plot = TRUE, boxes = FALSE)
points(sup$coor[102:104,], col = 6, pch = 16)
text(sup$coor[102:104,], labels = rownames(sup$coor[102:104,]),
     col = 6, pos = 1, font = 3, srt=-45)
```

## Horno microogas

Los pesos, distancias al cuadrado y las nuevas coordenadas son:

```{r}
#| echo: false
kable(pes_dist_coor[105:107,], digits = 3)
```

Los valores test y los cosenos cuadrados son:

```{r}
#| echo: false
kable(head(test_cos[105:107,]), digits = 3)
```

```{r}
#| echo: false
#| eval: false
plot(sup$coor[105:107,], col = 6, pch = 16,
     xlim = c(-1,1), ylim = c(-1,1),
     bty="n", axes = FALSE)
text(sup$coor[105:107,], labels = rownames(sup$coor[105:107,],),
     col = 6, pos = 1, font = 3, srt=-45) # srt es para rotar el texto
curve(sqrt(1 - x*x), -1, 1, 1e4, add = TRUE, lty = 3)
curve(-sqrt(1 - x*x), -1, 1, 1e4, add = TRUE, lty = 3)
abline(h=0, col="grey"); abline(v=0, col="grey")
s.arrow(acp$co, add.plot = TRUE, boxes = T,
        xax = 1, yax = 2)
s.arrow(GGlob, add.plot = TRUE, boxes = FALSE,
        xax = 1, yax = 2)
```

```{r}
#| echo: false
plot(acp, Tcol = FALSE, ucal = 100, cex.row = 0,
     xlim = c(min(sup$coor[105:107,]-0.2),1), ylim = c(-1, 1), plot.axes = FALSE)
s.arrow(acp$co, add.plot = TRUE, boxes = T)
s.arrow(GGlob, add.plot = TRUE, boxes = FALSE)
points(sup$coor[105:107,], col = 6, pch = 16)
text(sup$coor[105:107,], labels = rownames(sup$coor[105:107,]),
     col = 6, pos = 1, font = 3, srt=-45)
```

## TV

Los pesos, distancias al cuadrado y las nuevas coordenadas son:

```{r}
#| echo: false
kable(pes_dist_coor[108:110,], digits = 3)
```

Los valores test y los cosenos cuadrados son:

```{r}
#| echo: false
kable(head(test_cos[108:110,]), digits = 3)
```

```{r}
#| echo: false
#| eval: false
plot(sup$coor[108:110,], col = 6, pch = 16,
     xlim = c(-1,1), ylim = c(-1,1),
     bty="n", axes = FALSE)
text(sup$coor[108:110,], labels = rownames(sup$coor[108:110,],),
     col = 6, pos = 1, font = 3, srt=-45) # srt es para rotar el texto
curve(sqrt(1 - x*x), -1, 1, 1e4, add = TRUE, lty = 3)
curve(-sqrt(1 - x*x), -1, 1, 1e4, add = TRUE, lty = 3)
abline(h=0, col="grey"); abline(v=0, col="grey")
s.arrow(acp$co, add.plot = TRUE, boxes = T,
        xax = 1, yax = 2)
s.arrow(GGlob, add.plot = TRUE, boxes = FALSE,
        xax = 1, yax = 2)
```

```{r}
#| echo: false
plot(acp, Tcol = FALSE, ucal = 100, cex.row = 0,
     xlim = c(min(sup$coor[108:110,]-0.2),1), ylim = c(-1, 1), plot.axes = FALSE)
s.arrow(acp$co, add.plot = TRUE, boxes = T)
s.arrow(GGlob, add.plot = TRUE, boxes = FALSE)
points(sup$coor[108:110,], col = 6, pch = 16)
text(sup$coor[108:110,], labels = rownames(sup$coor[108:110,]),
     col = 6, pos = 1, font = 3, srt=-45)
```

## Automóvil

Los pesos, distancias al cuadrado y las nuevas coordenadas son:

```{r}
#| echo: false
kable(pes_dist_coor[111:113,], digits = 3)
```

Los valores test y los cosenos cuadrados son:

```{r}
#| echo: false
kable(head(test_cos[111:113,]), digits = 3)
```

```{r}
#| echo: false
#| eval: false
plot(sup$coor[111:113,], col = 6, pch = 16,
     xlim = c(-1,1), ylim = c(-1,1),
     bty="n", axes = FALSE)
text(sup$coor[111:113,], labels = rownames(sup$coor[111:113,],),
     col = 6, pos = 1, font = 3, srt=-45) # srt es para rotar el texto
curve(sqrt(1 - x*x), -1, 1, 1e4, add = TRUE, lty = 3)
curve(-sqrt(1 - x*x), -1, 1, 1e4, add = TRUE, lty = 3)
abline(h=0, col="grey"); abline(v=0, col="grey")
s.arrow(acp$co, add.plot = TRUE, boxes = T,
        xax = 1, yax = 2)
s.arrow(GGlob, add.plot = TRUE, boxes = FALSE,
        xax = 1, yax = 2)
```

```{r}
#| echo: false
plot(acp, Tcol = FALSE, ucal = 100, cex.row = 0,
     xlim = c(min(sup$coor[111:113,]-0.2),1), ylim = c(-1, 1), plot.axes = FALSE)
s.arrow(acp$co, add.plot = TRUE, boxes = T)
s.arrow(GGlob, add.plot = TRUE, boxes = FALSE)
points(sup$coor[111:113,], col = 6, pch = 16)
text(sup$coor[111:113,], labels = rownames(sup$coor[111:113,]),
     col = 6, pos = 1, font = 3, srt=-45)
```

## Motocicleta

Los pesos, distancias al cuadrado y las nuevas coordenadas son:

```{r}
#| echo: false
kable(pes_dist_coor[114:116,], digits = 3)
```

Los valores test y los cosenos cuadrados son:

```{r}
#| echo: false
kable(head(test_cos[114:116,]), digits = 3)
```

```{r}
#| echo: false
#| eval: false
plot(sup$coor[114:116,], col = 6, pch = 16,
     xlim = c(-1,1), ylim = c(-1,1),
     bty="n", axes = FALSE)
text(sup$coor[114:116,], labels = rownames(sup$coor[114:116,],),
     col = 6, pos = 1, font = 3, srt=-45) # srt es para rotar el texto
curve(sqrt(1 - x*x), -1, 1, 1e4, add = TRUE, lty = 3)
curve(-sqrt(1 - x*x), -1, 1, 1e4, add = TRUE, lty = 3)
abline(h=0, col="grey"); abline(v=0, col="grey")
s.arrow(acp$co, add.plot = TRUE, boxes = T,
        xax = 1, yax = 2)
s.arrow(GGlob, add.plot = TRUE, boxes = FALSE,
        xax = 1, yax = 2)
```

```{r}
#| echo: false
plot(acp, Tcol = FALSE, ucal = 100, cex.row = 0,
     xlim = c(min(sup$coor[114:116,]-0.2),1), ylim = c(-1, 1), plot.axes = FALSE)
s.arrow(acp$co, add.plot = TRUE, boxes = T)
s.arrow(GGlob, add.plot = TRUE, boxes = FALSE)
points(sup$coor[114:116,], col = 6, pch = 16)
text(sup$coor[114:116,], labels = rownames(sup$coor[114:116,]),
     col = 6, pos = 1, font = 3, srt=-45)
```

## Consola de videojuegos

Los pesos, distancias al cuadrado y las nuevas coordenadas son:

```{r}
#| echo: false
kable(pes_dist_coor[117:119,], digits = 3)
```

Los valores test y los cosenos cuadrados son:

```{r}
#| echo: false
kable(head(test_cos[117:119,]), digits = 3)
```

```{r}
#| echo: false
#| eval: false
plot(sup$coor[117:119,], col = 6, pch = 16,
     xlim = c(-1,1), ylim = c(-1,1),
     bty="n", axes = FALSE)
text(sup$coor[117:119,], labels = rownames(sup$coor[117:119,],),
     col = 6, pos = 1, font = 3, srt=-45) # srt es para rotar el texto
curve(sqrt(1 - x*x), -1, 1, 1e4, add = TRUE, lty = 3)
curve(-sqrt(1 - x*x), -1, 1, 1e4, add = TRUE, lty = 3)
abline(h=0, col="grey"); abline(v=0, col="grey")
s.arrow(acp$co, add.plot = TRUE, boxes = T,
        xax = 1, yax = 2)
s.arrow(GGlob, add.plot = TRUE, boxes = FALSE,
        xax = 1, yax = 2)
```

```{r}
#| echo: false
plot(acp, Tcol = FALSE, ucal = 100, cex.row = 0,
     xlim = c(min(sup$coor[117:119,]-0.2),1), ylim = c(-1, 1), plot.axes = FALSE)
s.arrow(acp$co, add.plot = TRUE, boxes = T)
s.arrow(GGlob, add.plot = TRUE, boxes = FALSE)
points(sup$coor[117:119,], col = 6, pch = 16)
text(sup$coor[117:119,], labels = rownames(sup$coor[117:119,]),
     col = 6, pos = 1, font = 3, srt=-45)
```

:::